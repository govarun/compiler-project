
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unitleftLORleftLANDleftORleftXORleftANDleftEQUALNOTEQUALleftGREATERGREATEREQUALLESSLESSEQUALleftRSHIFTLSHIFTleftPLUSMINUSleftMULTIPLYDIVIDEMODAND ANDEQUAL ARROW AUTO BIN_CONST BREAK CASE CHAR CHAR_CONST COLON COMMA CONDOP CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDEEQUAL DO DOUBLE ELLIPSIS ELSE ENUM EQUAL EQUALS EXTERN FLOAT FLOAT_CONST FOR GOTO GREATER GREATEREQUAL HASH HEX_CONST ID IF INCREMENT INT INT_CONST LAND LCURLYBRACKET LESS LESSEQUAL LNOT LONG LOR LPAREN LSHIFT LSHIFTEQUAL LSQUAREBRACKET MINUS MINUSEQUAL MOD MODEQUAL MULTIPLY MULTIPLYEQUAL NOT NOTEQUAL OCTAL_CONST OR OREQUAL PERIOD PLUS PLUSEQUAL RCURLYBRACKET REGISTER RETURN RPAREN RSHIFT RSHIFTEQUAL RSQUAREBRACKET SEMICOLON SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XOR XOREQUALprimary_expression : ID\n                | INT_CONST\n                | FLOAT_CONST\n                | CHAR_CONST\n                | STRING_LITERAL\n                | LPAREN expression RPAREN\n  argument_expression_list : assignment_expression\n                              | argument_expression_list COMMA assignment_expression\n  postfix_expression : primary_expression\n\t| postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET\n\t| postfix_expression LPAREN RPAREN\n  | postfix_expression PERIOD ID\n\t| postfix_expression LPAREN argument_expression_list RPAREN\n\t| postfix_expression ARROW ID\n\t| postfix_expression INCREMENT\n\t| postfix_expression DECREMENT\n  unary_expression : postfix_expression\n                      | INCREMENT unary_expression\n                      | DECREMENT unary_expression\n                      | unary_operator cast_expression\n                      | SIZEOF unary_expression\n                      | SIZEOF LPAREN type_name RPAREN\n  unary_operator : AND\n                    | MULTIPLY\n                    | PLUS\n                    | MINUS\n                    | NOT\n                    | LNOT\n  cast_expression : unary_expression\n                     | LPAREN type_name RPAREN cast_expression\n  multiplicative_expression : cast_expression\n\t| multiplicative_expression MULTIPLY cast_expression\n\t| multiplicative_expression DIVIDE cast_expression\n\t| multiplicative_expression MOD cast_expression\n  additive_expression : multiplicative_expression\n\t| additive_expression PLUS multiplicative_expression\n\t| additive_expression MINUS multiplicative_expression\n  shift_expression : additive_expression\n\t| shift_expression LSHIFT additive_expression\n\t| shift_expression RSHIFT additive_expression\n\trelational_expression : shift_expression\n\t| relational_expression LESS shift_expression\n\t| relational_expression GREATER shift_expression\n\t| relational_expression LESSEQUAL shift_expression\n\t| relational_expression GREATEREQUAL shift_expression\n  equality_expression : relational_expression\n\t| equality_expression EQUAL relational_expression\n\t| equality_expression NOTEQUAL relational_expression\n  and_expression : equality_expression\n\t| and_expression AND equality_expression\n  exclusive_or_expression : and_expression\n\t| exclusive_or_expression XOR and_expression\n\tinclusive_or_expression : exclusive_or_expression\n\t| inclusive_or_expression OR exclusive_or_expression\n  logical_and_expression : inclusive_or_expression \n  | logical_and_expression LAND inclusive_or_expression\n  logical_or_expression : logical_and_expression\n\t| logical_or_expression LOR logical_and_expression\n  conditional_expression : logical_or_expression\n\t| logical_or_expression CONDOP expression COLON conditional_expression\n  assignment_expression : conditional_expression \n  | unary_expression assignment_operator assignment_expression\n  assignment_operator : EQUALS\n\t| MULTIPLYEQUAL\n\t| DIVIDEEQUAL\n\t| MODEQUAL\n\t| PLUSEQUAL\n\t| MINUSEQUAL\n\t| LSHIFTEQUAL\n\t| RSHIFTEQUAL\n\t| ANDEQUAL\n\t| XOREQUAL\n\t| OREQUAL\n\texpression : assignment_expression\n\t| expression COMMA assignment_expression\n  constant_expression : conditional_expressiondeclaration : declaration_specifiers SEMICOLON\n\t| declaration_specifiers init_declarator_list SEMICOLON\n  declaration_specifiers : storage_class_specifier\n\t| storage_class_specifier declaration_specifiers\n\t| type_specifier\n\t| type_specifier declaration_specifiers\n\t| type_qualifier\n\t| type_qualifier declaration_specifiers\n  init_declarator_list : init_declarator\n\t| init_declarator_list COMMA init_declarator\n  init_declarator : declarator\n\t| declarator EQUALS initializer\n  storage_class_specifier : TYPEDEF\n\t| EXTERN\n\t| STATIC\n\t| AUTO\n\t| REGISTER\n  type_specifier : VOID\n                     | CHAR\n                     | SHORT\n                     | INT\n                     | LONG\n                     | FLOAT\n                     | DOUBLE\n                     | SIGNED\n                     | UNSIGNED\n                     | type_name\n    specifier_qualifier_list : type_specifier specifier_qualifier_list\n  | type_specifier\n  | type_qualifier specifier_qualifier_list\n  | type_qualifier\n  type_qualifier : CONST\n                      | VOLATILE\n    declarator : pointer direct_declarator\n  | direct_declarator\n  direct_declarator : ID\n                         | LPAREN declarator RPAREN\n                         | direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET\n                         | direct_declarator LSQUAREBRACKET RSQUAREBRACKET\n                         | direct_declarator LPAREN parameter_type_list RPAREN\n                         | direct_declarator LPAREN identifier_list RPAREN\n                         | direct_declarator LPAREN RPAREN\n    type_qualifier_list : type_qualifier\n                          | type_qualifier_list type_qualifier\n    pointer : MULTIPLY \n               | MULTIPLY type_qualifier_list\n               | MULTIPLY type_qualifier_list pointer\n               | MULTIPLY pointer\n    parameter_type_list : parameter_list\n                           | parameter_list COMMA ELLIPSIS\n    parameter_list : parameter_declaration\n                      | parameter_list COMMA parameter_declaration\n    parameter_declaration : declaration_specifiers declarator\n                             | declaration_specifiers abstract_declarator\n                             | declaration_specifiers\n    identifier_list : ID\n                       | identifier_list COMMA ID\n    type_name : specifier_qualifier_list\n                 | specifier_qualifier_list abstract_declarator\n    abstract_declarator : pointer \n                           | direct_abstract_declarator\n                           | pointer direct_abstract_declarator\n    direct_abstract_declarator : LPAREN abstract_declarator RPAREN\n                                  | LSQUAREBRACKET RSQUAREBRACKET\n                                  | LSQUAREBRACKET constant_expression RSQUAREBRACKET\n                                  | direct_abstract_declarator LPAREN RPAREN\n                                  | direct_abstract_declarator LPAREN constant_expression RPAREN \n                                  | LPAREN RPAREN\n                                  | LPAREN parameter_type_list RPAREN\n                                  | direct_abstract_declarator LPAREN parameter_type_list RPAREN\n    initializer : assignment_expression\n                   | LCURLYBRACKET initializer_list RCURLYBRACKET\n                   | LCURLYBRACKET initializer_list COMMA RCURLYBRACKET                                   \n    initializer_list : initializer\n  | initializer_list COMMA initializer\n  statement : labeled_statement\n                 | compound_statement\n                 | expression_statement\n                 | selection_statement\n                 | iteration_statement\n                 | jump_statement\n    labeled_statement : ID COLON statement \n                         | CASE constant_expression COLON statement\n                         | DEFAULT COLON statement\n    compound_statement : LCURLYBRACKET RCURLYBRACKET\n                          | LCURLYBRACKET statement_list RCURLYBRACKET\n                          | LCURLYBRACKET declaration_list RCURLYBRACKET\n                          | LCURLYBRACKET declaration_list statement_list RCURLYBRACKET\n    expression_statement : SEMICOLON\n                            | expression SEMICOLON\n    declaration_list : declaration\n                        | declaration_list declaration\n    statement_list : statement\n                      | statement_list statement\n    selection_statement : IF LPAREN expression RPAREN statement\n                           | IF LPAREN expression RPAREN statement ELSE statement\n                           | SWITCH LPAREN expression RPAREN statement\n    iteration_statement : WHILE LPAREN expression RPAREN\n                           | DO statement WHILE LPAREN expression RPAREN SEMICOLON\n                           | FOR LPAREN expression_statement expression_statement RPAREN statement\n                           | FOR LPAREN expression_statement expression_statement expression RPAREN statement                                                 \n    jump_statement : GOTO ID SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | BREAK SEMICOLON\n                      | RETURN SEMICOLON\n                      | RETURN expression SEMICOLON\n    translation_unit : external_declaration\n                        | translation_unit external_declaration\n    external_declaration : function_definition\n                            | declaration\n    function_definition : declaration_specifiers declarator declaration_list compound_statement\n                           | declaration_specifiers declarator compound_statement\n                           | declarator declaration_list compound_statement\n                           | declarator compound_statement                                                                              \n    '
    
_lr_action_items = {'TYPEDEF':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,124,130,136,137,138,139,140,142,144,146,151,153,217,218,219,221,225,226,229,230,231,234,278,279,],[12,12,-183,-185,-186,12,12,12,12,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,12,-77,12,-190,-167,12,-104,-106,-110,12,-122,-124,-119,-135,-136,-137,12,12,-188,-78,-189,-168,-161,12,-115,-118,-123,-120,-113,-138,12,-144,-140,-187,-162,-163,-114,-116,-117,12,12,-142,-139,-145,-141,-164,-143,-146,]),'EXTERN':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,124,130,136,137,138,139,140,142,144,146,151,153,217,218,219,221,225,226,229,230,231,234,278,279,],[13,13,-183,-185,-186,13,13,13,13,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,13,-77,13,-190,-167,13,-104,-106,-110,13,-122,-124,-119,-135,-136,-137,13,13,-188,-78,-189,-168,-161,13,-115,-118,-123,-120,-113,-138,13,-144,-140,-187,-162,-163,-114,-116,-117,13,13,-142,-139,-145,-141,-164,-143,-146,]),'STATIC':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,124,130,136,137,138,139,140,142,144,146,151,153,217,218,219,221,225,226,229,230,231,234,278,279,],[14,14,-183,-185,-186,14,14,14,14,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,14,-77,14,-190,-167,14,-104,-106,-110,14,-122,-124,-119,-135,-136,-137,14,14,-188,-78,-189,-168,-161,14,-115,-118,-123,-120,-113,-138,14,-144,-140,-187,-162,-163,-114,-116,-117,14,14,-142,-139,-145,-141,-164,-143,-146,]),'AUTO':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,124,130,136,137,138,139,140,142,144,146,151,153,217,218,219,221,225,226,229,230,231,234,278,279,],[15,15,-183,-185,-186,15,15,15,15,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,15,-77,15,-190,-167,15,-104,-106,-110,15,-122,-124,-119,-135,-136,-137,15,15,-188,-78,-189,-168,-161,15,-115,-118,-123,-120,-113,-138,15,-144,-140,-187,-162,-163,-114,-116,-117,15,15,-142,-139,-145,-141,-164,-143,-146,]),'REGISTER':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,124,130,136,137,138,139,140,142,144,146,151,153,217,218,219,221,225,226,229,230,231,234,278,279,],[16,16,-183,-185,-186,16,16,16,16,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,16,-77,16,-190,-167,16,-104,-106,-110,16,-122,-124,-119,-135,-136,-137,16,16,-188,-78,-189,-168,-161,16,-115,-118,-123,-120,-113,-138,16,-144,-140,-187,-162,-163,-114,-116,-117,16,16,-142,-139,-145,-141,-164,-143,-146,]),'VOID':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[17,17,-183,-185,-186,17,17,17,17,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,17,-77,17,-190,-167,17,-104,-106,-110,17,-122,-124,-119,-135,-136,-137,17,17,-188,-78,-189,-168,-161,17,17,-115,17,-118,-123,-120,-113,-138,17,-144,-140,-187,-162,-163,-103,17,17,17,-114,-116,-117,17,17,-142,-139,-145,-141,-164,-103,-143,-146,]),'CHAR':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[18,18,-183,-185,-186,18,18,18,18,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,18,-77,18,-190,-167,18,-104,-106,-110,18,-122,-124,-119,-135,-136,-137,18,18,-188,-78,-189,-168,-161,18,18,-115,18,-118,-123,-120,-113,-138,18,-144,-140,-187,-162,-163,-103,18,18,18,-114,-116,-117,18,18,-142,-139,-145,-141,-164,-103,-143,-146,]),'SHORT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[19,19,-183,-185,-186,19,19,19,19,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,19,-77,19,-190,-167,19,-104,-106,-110,19,-122,-124,-119,-135,-136,-137,19,19,-188,-78,-189,-168,-161,19,19,-115,19,-118,-123,-120,-113,-138,19,-144,-140,-187,-162,-163,-103,19,19,19,-114,-116,-117,19,19,-142,-139,-145,-141,-164,-103,-143,-146,]),'INT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[20,20,-183,-185,-186,20,20,20,20,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,20,-77,20,-190,-167,20,-104,-106,-110,20,-122,-124,-119,-135,-136,-137,20,20,-188,-78,-189,-168,-161,20,20,-115,20,-118,-123,-120,-113,-138,20,-144,-140,-187,-162,-163,-103,20,20,20,-114,-116,-117,20,20,-142,-139,-145,-141,-164,-103,-143,-146,]),'LONG':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[21,21,-183,-185,-186,21,21,21,21,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,21,-77,21,-190,-167,21,-104,-106,-110,21,-122,-124,-119,-135,-136,-137,21,21,-188,-78,-189,-168,-161,21,21,-115,21,-118,-123,-120,-113,-138,21,-144,-140,-187,-162,-163,-103,21,21,21,-114,-116,-117,21,21,-142,-139,-145,-141,-164,-103,-143,-146,]),'FLOAT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[22,22,-183,-185,-186,22,22,22,22,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,22,-77,22,-190,-167,22,-104,-106,-110,22,-122,-124,-119,-135,-136,-137,22,22,-188,-78,-189,-168,-161,22,22,-115,22,-118,-123,-120,-113,-138,22,-144,-140,-187,-162,-163,-103,22,22,22,-114,-116,-117,22,22,-142,-139,-145,-141,-164,-103,-143,-146,]),'DOUBLE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[23,23,-183,-185,-186,23,23,23,23,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,23,-77,23,-190,-167,23,-104,-106,-110,23,-122,-124,-119,-135,-136,-137,23,23,-188,-78,-189,-168,-161,23,23,-115,23,-118,-123,-120,-113,-138,23,-144,-140,-187,-162,-163,-103,23,23,23,-114,-116,-117,23,23,-142,-139,-145,-141,-164,-103,-143,-146,]),'SIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[24,24,-183,-185,-186,24,24,24,24,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,24,-77,24,-190,-167,24,-104,-106,-110,24,-122,-124,-119,-135,-136,-137,24,24,-188,-78,-189,-168,-161,24,24,-115,24,-118,-123,-120,-113,-138,24,-144,-140,-187,-162,-163,-103,24,24,24,-114,-116,-117,24,24,-142,-139,-145,-141,-164,-103,-143,-146,]),'UNSIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[25,25,-183,-185,-186,25,25,25,25,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,25,-77,25,-190,-167,25,-104,-106,-110,25,-122,-124,-119,-135,-136,-137,25,25,-188,-78,-189,-168,-161,25,25,-115,25,-118,-123,-120,-113,-138,25,-144,-140,-187,-162,-163,-103,25,25,25,-114,-116,-117,25,25,-142,-139,-145,-141,-164,-103,-143,-146,]),'CONST':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[27,27,-183,-185,-186,27,27,27,27,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,27,-77,27,-190,-167,27,-104,-106,-110,27,-122,-124,-119,-135,-136,-137,27,27,-188,-78,-189,-168,-161,27,27,-115,27,-118,-123,-120,-113,-138,27,-144,-140,-187,-162,-163,-103,27,27,27,-114,-116,-117,27,27,-142,-139,-145,-141,-164,-103,-143,-146,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,39,40,41,45,47,48,50,51,52,53,55,56,57,58,60,61,63,65,66,67,69,83,124,127,130,136,137,138,139,140,142,144,146,151,153,162,163,164,199,217,218,219,221,225,226,229,230,231,234,257,278,279,],[28,28,-183,-185,-186,28,28,28,28,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-184,28,-77,28,-190,-167,28,-104,-106,-110,28,-122,-124,-119,-135,-136,-137,28,28,-188,-78,-189,-168,-161,28,28,-115,28,-118,-123,-120,-113,-138,28,-144,-140,-187,-162,-163,-103,28,28,28,-114,-116,-117,28,28,-142,-139,-145,-141,-164,-103,-143,-146,]),'MULTIPLY':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,39,40,41,42,43,44,45,46,47,49,51,52,53,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,91,94,96,97,98,99,100,101,103,104,105,106,107,108,109,111,112,113,114,121,126,127,128,135,136,137,139,140,142,144,146,149,151,152,153,154,155,157,158,159,160,162,163,164,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,225,226,229,230,231,234,235,236,237,240,241,245,246,247,252,255,256,257,270,271,272,273,274,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,296,297,299,303,305,306,307,308,309,],[29,29,-183,-185,-186,29,-79,-81,-83,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,29,29,-184,-77,-190,-167,105,29,-80,-82,29,-84,29,105,-122,-124,-119,-135,-136,-137,29,105,-188,105,-78,29,-189,-168,-161,105,105,-169,-152,-153,-154,-155,-156,-157,-165,-1,105,105,105,105,-29,-17,105,105,105,-31,105,-9,-23,-24,-25,-26,-27,-28,-2,-3,-4,-5,214,-29,105,-1,29,-123,-120,-138,105,-144,-140,-187,105,-162,-170,-163,105,105,105,-166,105,105,-103,-105,-107,105,105,105,-179,-180,-181,105,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,105,105,105,105,-15,-16,-18,105,-19,-20,-21,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,29,-142,-139,-145,-141,-164,-158,105,-160,-6,105,105,-178,-182,-11,-12,-14,-103,214,214,-32,-33,-34,-143,-146,105,-159,105,-30,105,-174,105,105,105,-10,-13,105,-22,-171,-173,105,105,-176,105,-172,-175,-177,]),'ID':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,39,40,41,42,43,44,45,46,47,49,50,51,52,53,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,88,91,97,98,99,101,104,105,106,107,108,109,127,135,136,137,139,140,142,144,146,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,220,224,225,226,229,230,231,234,235,236,237,241,245,246,247,278,279,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[30,30,-183,-185,-186,30,-79,-81,-83,30,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,30,-134,-184,-77,-190,-167,78,30,-80,-82,-104,-84,-106,128,133,-122,-124,-119,-135,-136,-137,128,-188,128,-78,30,-189,-168,-161,78,78,-169,-152,-153,-154,-155,-156,-157,-165,128,128,78,169,128,128,128,128,128,-23,-24,-25,-26,-27,-28,128,30,-123,-120,-138,128,-144,-140,-187,128,-162,-170,-163,78,78,78,-166,128,128,128,128,128,-179,-180,-181,128,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,128,128,128,128,255,256,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,275,30,30,-142,-139,-145,-141,-164,-158,78,-160,128,128,-178,-182,-143,-146,128,-159,78,78,-174,128,128,128,128,-171,-173,78,78,-176,78,-172,-175,-177,]),'LPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,39,40,41,42,43,44,45,46,47,48,49,51,52,53,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,91,96,97,98,99,101,103,104,105,106,107,108,109,111,112,113,114,124,127,128,130,135,136,137,138,139,140,142,144,146,149,151,152,153,154,155,157,158,159,160,162,163,164,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,224,225,226,229,230,231,234,235,236,237,240,241,244,245,246,247,252,255,256,257,278,279,281,282,283,285,286,287,288,289,290,291,292,296,297,299,303,305,306,307,308,309,],[31,31,-183,-185,-186,31,-79,-81,-83,31,50,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,31,58,-184,-77,-190,-167,83,31,-80,-82,58,-84,58,50,127,-122,-124,-119,-135,58,140,58,127,-188,83,-78,31,-189,-168,-161,83,83,-169,-152,-153,-154,-155,-156,-157,-165,-1,127,160,83,165,166,83,168,83,189,195,195,127,199,-9,-23,-24,-25,-26,-27,-28,-2,-3,-4,-5,-115,83,-1,-118,225,-123,-120,-113,140,127,-144,-140,-187,83,-162,-170,-163,83,83,83,-166,83,83,-103,-105,-107,83,83,83,-179,-180,-181,83,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,83,127,83,83,-15,-16,83,83,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-114,-116,-117,225,225,-142,-139,-145,-141,-164,-158,83,-160,-6,127,287,83,-178,-182,-11,-12,-14,-103,-143,-146,83,-159,83,83,-174,83,83,127,-10,-13,83,-171,-173,83,83,-176,83,-172,-175,-177,]),'$end':([1,2,3,4,33,35,39,61,63,65,67,146,151,153,234,],[0,-183,-185,-186,-184,-77,-190,-188,-78,-189,-161,-187,-162,-163,-164,]),'SEMICOLON':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,40,41,42,43,44,45,46,47,48,51,52,53,55,56,57,63,66,67,68,69,70,71,72,73,74,75,76,77,78,81,86,89,90,91,92,93,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,128,130,136,137,138,139,142,144,147,148,150,151,152,153,154,155,157,158,168,169,170,171,172,173,192,193,194,196,197,198,217,218,219,226,229,230,231,234,235,236,237,238,240,245,246,247,248,250,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,278,279,280,282,283,284,285,286,290,291,293,294,296,297,299,301,303,304,305,306,307,308,309,],[35,-79,-81,-83,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-87,-77,63,-85,-167,77,35,-80,-82,-104,-84,-106,-110,-122,-124,-119,-135,-136,-137,-78,-168,-161,77,77,-169,-152,-153,-154,-155,-156,-157,-165,-1,158,77,170,171,172,-74,-61,-29,-59,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-87,-115,-29,-1,-118,-123,-120,-113,-138,-144,-140,-88,-147,-86,-162,-170,-163,77,77,77,-166,77,246,-179,-180,-181,247,-15,-16,-18,-19,-20,-21,-114,-116,-117,-142,-139,-145,-141,-164,-158,77,-160,-75,-6,77,-178,-182,-62,-58,-11,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-143,-146,-148,-159,77,-30,77,-174,-10,-13,-22,-149,-171,-173,77,-60,77,308,-176,77,-172,-175,-177,]),'LCURLYBRACKET':([6,11,30,34,35,38,40,41,48,60,62,63,66,67,68,69,70,71,72,73,74,75,76,77,86,124,130,138,149,151,152,153,154,155,157,158,170,171,172,217,218,219,234,235,236,237,246,247,281,282,283,285,286,296,297,299,303,305,306,307,308,309,],[41,-111,-112,41,-77,41,-167,41,-110,41,149,-78,-168,-161,41,41,-169,-152,-153,-154,-155,-156,-157,-165,41,-115,-118,-113,149,-162,-170,-163,41,41,41,-166,-179,-180,-181,-114,-116,-117,-164,-158,41,-160,-178,-182,149,-159,41,41,-174,-171,-173,41,41,-176,41,-172,-175,-177,]),'LSQUAREBRACKET':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,51,52,53,55,56,57,58,78,96,103,111,112,113,114,124,128,130,135,136,137,138,139,142,144,162,163,164,192,193,217,218,219,224,225,226,229,230,231,240,252,255,256,257,278,279,290,291,],[-79,-81,-83,49,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,59,-80,-82,59,-84,59,49,-122,-124,-119,-135,59,-137,59,-1,188,-9,-2,-3,-4,-5,-115,-1,-118,59,-123,-120,-113,-138,-144,-140,-103,-105,-107,-15,-16,-114,-116,-117,59,59,-142,-139,-145,-141,-6,-11,-12,-14,-103,-143,-146,-10,-13,]),'COMMA':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,36,37,43,44,45,46,47,48,51,52,53,55,56,57,78,81,92,93,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,128,130,131,132,133,134,135,136,137,138,139,142,144,147,148,150,161,173,192,193,194,196,197,198,217,218,219,222,223,224,226,229,230,231,232,233,238,239,240,242,243,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,284,290,291,293,294,295,298,300,301,302,],[-79,-81,-83,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-87,64,-85,-80,-82,-104,-84,-106,-110,-122,-124,-119,-135,-136,-137,-1,159,-74,-61,-29,-59,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-87,-115,-29,-1,-118,220,221,-132,-127,-131,-123,-120,-113,-138,-144,-140,-88,-147,-86,159,159,-15,-16,-18,-19,-20,-21,-114,-116,-117,-129,-130,-136,-142,-139,-145,-141,281,-150,-75,159,-6,159,159,-62,159,-58,159,-11,292,-7,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-133,-128,-143,-146,-148,-30,-10,-13,-22,-149,-151,159,159,-60,-8,]),'RPAREN':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,77,92,93,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,158,161,162,163,164,189,192,193,194,196,197,198,217,218,219,222,223,224,225,226,227,228,229,230,231,238,239,240,242,243,248,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,284,288,290,291,293,298,300,301,302,],[-79,-81,-83,-111,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-108,-109,-121,-112,-134,-80,-82,-104,-84,-106,-110,130,-122,-124,-119,138,-135,-136,-137,142,-165,-74,-61,-29,-59,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-115,-76,-29,-1,218,-118,219,-125,-132,-127,-131,-123,-120,-113,-138,226,229,-144,230,-140,-166,240,241,-105,-107,252,-15,-16,-18,-19,-20,-21,-114,-116,-117,-129,-130,-136,142,-142,278,279,-139,-145,-141,-75,283,-6,285,286,-62,-58,-11,291,-7,-12,-14,293,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-133,-126,-128,-143,-146,-30,299,-10,-13,-22,304,306,-60,-8,]),'EQUALS':([11,30,34,48,78,94,96,103,111,112,113,114,122,124,126,128,130,138,192,193,194,196,197,198,217,218,219,240,252,255,256,284,290,291,293,],[-111,-112,62,-110,-1,175,-17,-9,-2,-3,-4,-5,62,-115,-29,-1,-118,-113,-15,-16,-18,-19,-20,-21,-114,-116,-117,-6,-11,-12,-14,-30,-10,-13,-22,]),'RCURLYBRACKET':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,93,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,126,128,148,151,152,153,154,158,170,171,172,192,193,194,196,197,198,232,233,234,235,237,240,246,247,248,250,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,280,281,282,284,286,290,291,293,294,295,296,297,301,305,307,308,309,],[-77,-167,67,-78,-168,-161,151,153,-169,-152,-153,-154,-155,-156,-157,-165,-61,-29,-59,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-1,-147,-162,-170,-163,234,-166,-179,-180,-181,-15,-16,-18,-19,-20,-21,280,-150,-164,-158,-160,-6,-178,-182,-62,-58,-11,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-148,294,-159,-30,-174,-10,-13,-22,-149,-151,-171,-173,-60,-176,-172,-175,-177,]),'CASE':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,79,-78,-168,-161,79,79,-169,-152,-153,-154,-155,-156,-157,-165,79,-162,-170,-163,79,79,79,-166,-179,-180,-181,-164,-158,79,-160,-178,-182,-159,79,79,-174,-171,-173,79,79,-176,79,-172,-175,-177,]),'DEFAULT':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,80,-78,-168,-161,80,80,-169,-152,-153,-154,-155,-156,-157,-165,80,-162,-170,-163,80,80,80,-166,-179,-180,-181,-164,-158,80,-160,-178,-182,-159,80,80,-174,-171,-173,80,80,-176,80,-172,-175,-177,]),'IF':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,82,-78,-168,-161,82,82,-169,-152,-153,-154,-155,-156,-157,-165,82,-162,-170,-163,82,82,82,-166,-179,-180,-181,-164,-158,82,-160,-178,-182,-159,82,82,-174,-171,-173,82,82,-176,82,-172,-175,-177,]),'SWITCH':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,84,-78,-168,-161,84,84,-169,-152,-153,-154,-155,-156,-157,-165,84,-162,-170,-163,84,84,84,-166,-179,-180,-181,-164,-158,84,-160,-178,-182,-159,84,84,-174,-171,-173,84,84,-176,84,-172,-175,-177,]),'WHILE':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,167,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,85,-78,-168,-161,85,85,-169,-152,-153,-154,-155,-156,-157,-165,85,-162,-170,-163,85,85,85,-166,244,-179,-180,-181,-164,-158,85,-160,-178,-182,-159,85,85,-174,-171,-173,85,85,-176,85,-172,-175,-177,]),'DO':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,86,-78,-168,-161,86,86,-169,-152,-153,-154,-155,-156,-157,-165,86,-162,-170,-163,86,86,86,-166,-179,-180,-181,-164,-158,86,-160,-178,-182,-159,86,86,-174,-171,-173,86,86,-176,86,-172,-175,-177,]),'FOR':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,87,-78,-168,-161,87,87,-169,-152,-153,-154,-155,-156,-157,-165,87,-162,-170,-163,87,87,87,-166,-179,-180,-181,-164,-158,87,-160,-178,-182,-159,87,87,-174,-171,-173,87,87,-176,87,-172,-175,-177,]),'GOTO':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,88,-78,-168,-161,88,88,-169,-152,-153,-154,-155,-156,-157,-165,88,-162,-170,-163,88,88,88,-166,-179,-180,-181,-164,-158,88,-160,-178,-182,-159,88,88,-174,-171,-173,88,88,-176,88,-172,-175,-177,]),'CONTINUE':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,89,-78,-168,-161,89,89,-169,-152,-153,-154,-155,-156,-157,-165,89,-162,-170,-163,89,89,89,-166,-179,-180,-181,-164,-158,89,-160,-178,-182,-159,89,89,-174,-171,-173,89,89,-176,89,-172,-175,-177,]),'BREAK':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,90,-78,-168,-161,90,90,-169,-152,-153,-154,-155,-156,-157,-165,90,-162,-170,-163,90,90,90,-166,-179,-180,-181,-164,-158,90,-160,-178,-182,-159,90,90,-174,-171,-173,90,90,-176,90,-172,-175,-177,]),'RETURN':([35,40,41,63,66,67,68,69,70,71,72,73,74,75,76,77,86,151,152,153,154,155,157,158,170,171,172,234,235,236,237,246,247,282,283,285,286,296,297,299,303,305,306,307,308,309,],[-77,-167,91,-78,-168,-161,91,91,-169,-152,-153,-154,-155,-156,-157,-165,91,-162,-170,-163,91,91,91,-166,-179,-180,-181,-164,-158,91,-160,-178,-182,-159,91,91,-174,-171,-173,91,91,-176,91,-172,-175,-177,]),'INCREMENT':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,91,96,97,98,99,101,103,104,105,106,107,108,109,111,112,113,114,127,128,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,240,241,245,246,247,252,255,256,281,282,283,285,286,287,288,289,290,291,292,296,297,299,303,305,306,307,308,309,],[-77,-167,97,97,97,97,-78,-168,-161,97,97,-169,-152,-153,-154,-155,-156,-157,-165,-1,97,97,97,97,192,97,97,97,97,-9,-23,-24,-25,-26,-27,-28,-2,-3,-4,-5,97,-1,97,97,-162,-170,-163,97,97,97,-166,97,97,97,97,97,-179,-180,-181,97,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,97,97,97,97,-15,-16,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-164,-158,97,-160,-6,97,97,-178,-182,-11,-12,-14,97,-159,97,97,-174,97,97,97,-10,-13,97,-171,-173,97,97,-176,97,-172,-175,-177,]),'DECREMENT':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,91,96,97,98,99,101,103,104,105,106,107,108,109,111,112,113,114,127,128,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,240,241,245,246,247,252,255,256,281,282,283,285,286,287,288,289,290,291,292,296,297,299,303,305,306,307,308,309,],[-77,-167,98,98,98,98,-78,-168,-161,98,98,-169,-152,-153,-154,-155,-156,-157,-165,-1,98,98,98,98,193,98,98,98,98,-9,-23,-24,-25,-26,-27,-28,-2,-3,-4,-5,98,-1,98,98,-162,-170,-163,98,98,98,-166,98,98,98,98,98,-179,-180,-181,98,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,98,98,98,98,-15,-16,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-164,-158,98,-160,-6,98,98,-178,-182,-11,-12,-14,98,-159,98,98,-174,98,98,98,-10,-13,98,-171,-173,98,98,-176,98,-172,-175,-177,]),'SIZEOF':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,91,97,98,99,101,104,105,106,107,108,109,127,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,241,245,246,247,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[-77,-167,101,101,101,101,-78,-168,-161,101,101,-169,-152,-153,-154,-155,-156,-157,-165,101,101,101,101,101,101,101,101,-23,-24,-25,-26,-27,-28,101,101,101,-162,-170,-163,101,101,101,-166,101,101,101,101,101,-179,-180,-181,101,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-164,-158,101,-160,101,101,-178,-182,101,-159,101,101,-174,101,101,101,101,-171,-173,101,101,-176,101,-172,-175,-177,]),'AND':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,91,94,96,97,98,99,100,101,103,104,105,106,107,108,109,111,112,113,114,116,117,118,119,120,121,126,127,128,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,240,241,245,246,247,252,255,256,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,281,282,283,284,285,286,287,288,289,290,291,292,293,296,297,299,303,305,306,307,308,309,],[-77,-167,104,104,104,104,-78,-168,-161,104,104,-169,-152,-153,-154,-155,-156,-157,-165,-1,104,104,104,104,-29,-17,104,104,104,-31,104,-9,-23,-24,-25,-26,-27,-28,-2,-3,-4,-5,203,-49,-46,-41,-38,-35,-29,104,-1,104,104,-162,-170,-163,104,104,104,-166,104,104,104,104,104,-179,-180,-181,104,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,104,104,104,104,-15,-16,-18,104,-19,-20,-21,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-164,-158,104,-160,-6,104,104,-178,-182,-11,-12,-14,203,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,104,-159,104,-30,104,-174,104,104,104,-10,-13,104,-22,-171,-173,104,104,-176,104,-172,-175,-177,]),'PLUS':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,91,94,96,97,98,99,100,101,103,104,105,106,107,108,109,111,112,113,114,120,121,126,127,128,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,240,241,245,246,247,252,255,256,268,269,270,271,272,273,274,281,282,283,284,285,286,287,288,289,290,291,292,293,296,297,299,303,305,306,307,308,309,],[-77,-167,106,106,106,106,-78,-168,-161,106,106,-169,-152,-153,-154,-155,-156,-157,-165,-1,106,106,106,106,-29,-17,106,106,106,-31,106,-9,-23,-24,-25,-26,-27,-28,-2,-3,-4,-5,212,-35,-29,106,-1,106,106,-162,-170,-163,106,106,106,-166,106,106,106,106,106,-179,-180,-181,106,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,106,106,106,106,-15,-16,-18,106,-19,-20,-21,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-164,-158,106,-160,-6,106,106,-178,-182,-11,-12,-14,212,212,-36,-37,-32,-33,-34,106,-159,106,-30,106,-174,106,106,106,-10,-13,106,-22,-171,-173,106,106,-176,106,-172,-175,-177,]),'MINUS':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,91,94,96,97,98,99,100,101,103,104,105,106,107,108,109,111,112,113,114,120,121,126,127,128,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,240,241,245,246,247,252,255,256,268,269,270,271,272,273,274,281,282,283,284,285,286,287,288,289,290,291,292,293,296,297,299,303,305,306,307,308,309,],[-77,-167,107,107,107,107,-78,-168,-161,107,107,-169,-152,-153,-154,-155,-156,-157,-165,-1,107,107,107,107,-29,-17,107,107,107,-31,107,-9,-23,-24,-25,-26,-27,-28,-2,-3,-4,-5,213,-35,-29,107,-1,107,107,-162,-170,-163,107,107,107,-166,107,107,107,107,107,-179,-180,-181,107,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,107,107,107,107,-15,-16,-18,107,-19,-20,-21,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-164,-158,107,-160,-6,107,107,-178,-182,-11,-12,-14,213,213,-36,-37,-32,-33,-34,107,-159,107,-30,107,-174,107,107,107,-10,-13,107,-22,-171,-173,107,107,-176,107,-172,-175,-177,]),'NOT':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,91,97,98,99,101,104,105,106,107,108,109,127,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,241,245,246,247,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[-77,-167,108,108,108,108,-78,-168,-161,108,108,-169,-152,-153,-154,-155,-156,-157,-165,108,108,108,108,108,108,108,108,-23,-24,-25,-26,-27,-28,108,108,108,-162,-170,-163,108,108,108,-166,108,108,108,108,108,-179,-180,-181,108,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-164,-158,108,-160,108,108,-178,-182,108,-159,108,108,-174,108,108,108,108,-171,-173,108,108,-176,108,-172,-175,-177,]),'LNOT':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,91,97,98,99,101,104,105,106,107,108,109,127,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,241,245,246,247,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[-77,-167,109,109,109,109,-78,-168,-161,109,109,-169,-152,-153,-154,-155,-156,-157,-165,109,109,109,109,109,109,109,109,-23,-24,-25,-26,-27,-28,109,109,109,-162,-170,-163,109,109,109,-166,109,109,109,109,109,-179,-180,-181,109,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-164,-158,109,-160,109,109,-178,-182,109,-159,109,109,-174,109,109,109,109,-171,-173,109,109,-176,109,-172,-175,-177,]),'INT_CONST':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,91,97,98,99,101,104,105,106,107,108,109,127,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,241,245,246,247,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[-77,-167,111,111,111,111,-78,-168,-161,111,111,-169,-152,-153,-154,-155,-156,-157,-165,111,111,111,111,111,111,111,111,-23,-24,-25,-26,-27,-28,111,111,111,-162,-170,-163,111,111,111,-166,111,111,111,111,111,-179,-180,-181,111,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-164,-158,111,-160,111,111,-178,-182,111,-159,111,111,-174,111,111,111,111,-171,-173,111,111,-176,111,-172,-175,-177,]),'FLOAT_CONST':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,91,97,98,99,101,104,105,106,107,108,109,127,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,241,245,246,247,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[-77,-167,112,112,112,112,-78,-168,-161,112,112,-169,-152,-153,-154,-155,-156,-157,-165,112,112,112,112,112,112,112,112,-23,-24,-25,-26,-27,-28,112,112,112,-162,-170,-163,112,112,112,-166,112,112,112,112,112,-179,-180,-181,112,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-164,-158,112,-160,112,112,-178,-182,112,-159,112,112,-174,112,112,112,112,-171,-173,112,112,-176,112,-172,-175,-177,]),'CHAR_CONST':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,91,97,98,99,101,104,105,106,107,108,109,127,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,241,245,246,247,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[-77,-167,113,113,113,113,-78,-168,-161,113,113,-169,-152,-153,-154,-155,-156,-157,-165,113,113,113,113,113,113,113,113,-23,-24,-25,-26,-27,-28,113,113,113,-162,-170,-163,113,113,113,-166,113,113,113,113,113,-179,-180,-181,113,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-164,-158,113,-160,113,113,-178,-182,113,-159,113,113,-174,113,113,113,113,-171,-173,113,113,-176,113,-172,-175,-177,]),'STRING_LITERAL':([35,40,41,49,59,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,91,97,98,99,101,104,105,106,107,108,109,127,140,149,151,152,153,154,155,157,158,159,160,165,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,234,235,236,237,241,245,246,247,281,282,283,285,286,287,288,289,292,296,297,299,303,305,306,307,308,309,],[-77,-167,114,114,114,114,-78,-168,-161,114,114,-169,-152,-153,-154,-155,-156,-157,-165,114,114,114,114,114,114,114,114,-23,-24,-25,-26,-27,-28,114,114,114,-162,-170,-163,114,114,114,-166,114,114,114,114,114,-179,-180,-181,114,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-164,-158,114,-160,114,114,-178,-182,114,-159,114,114,-174,114,114,114,114,-171,-173,114,114,-176,114,-172,-175,-177,]),'RSQUAREBRACKET':([49,59,92,93,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,145,192,193,194,196,197,198,238,240,248,250,251,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,301,],[124,144,-74,-61,-29,-59,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,217,-76,-29,-1,231,-15,-16,-18,-19,-20,-21,-75,-6,-62,-58,290,-11,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,-60,]),'ELSE':([67,71,72,73,74,75,76,77,151,153,158,170,171,172,234,235,237,246,247,282,286,296,297,305,307,308,309,],[-161,-152,-153,-154,-155,-156,-157,-165,-162,-163,-166,-179,-180,-181,-164,-158,-160,-178,-182,-159,-174,303,-173,-176,-172,-175,-177,]),'COLON':([78,80,92,93,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,125,126,128,156,192,193,194,196,197,198,238,240,248,249,250,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,301,],[155,157,-74,-61,-29,-59,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-76,-29,-1,236,-15,-16,-18,-19,-20,-21,-75,-6,-62,289,-58,-11,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,-60,]),'PERIOD':([78,96,103,111,112,113,114,128,192,193,240,252,255,256,290,291,],[-1,190,-9,-2,-3,-4,-5,-1,-15,-16,-6,-11,-12,-14,-10,-13,]),'ARROW':([78,96,103,111,112,113,114,128,192,193,240,252,255,256,290,291,],[-1,191,-9,-2,-3,-4,-5,-1,-15,-16,-6,-11,-12,-14,-10,-13,]),'MULTIPLYEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,176,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'DIVIDEEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,177,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'MODEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,178,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'PLUSEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,179,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'MINUSEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,180,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'LSHIFTEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,181,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'RSHIFTEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,182,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'ANDEQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,183,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'XOREQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,184,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'OREQUAL':([78,94,96,103,111,112,113,114,126,128,192,193,194,196,197,198,240,252,255,256,284,290,291,293,],[-1,185,-17,-9,-2,-3,-4,-5,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,-30,-10,-13,-22,]),'DIVIDE':([78,94,96,100,103,111,112,113,114,121,126,128,192,193,194,196,197,198,240,252,255,256,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,215,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,215,215,-32,-33,-34,-30,-10,-13,-22,]),'MOD':([78,94,96,100,103,111,112,113,114,121,126,128,192,193,194,196,197,198,240,252,255,256,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,216,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,216,216,-32,-33,-34,-30,-10,-13,-22,]),'LSHIFT':([78,94,96,100,103,111,112,113,114,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,210,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,210,210,210,210,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'RSHIFT':([78,94,96,100,103,111,112,113,114,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,211,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,211,211,211,211,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'LESS':([78,94,96,100,103,111,112,113,114,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,206,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,206,206,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'GREATER':([78,94,96,100,103,111,112,113,114,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,207,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,207,207,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'LESSEQUAL':([78,94,96,100,103,111,112,113,114,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,208,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,208,208,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'GREATEREQUAL':([78,94,96,100,103,111,112,113,114,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,209,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,209,209,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'EQUAL':([78,94,96,100,103,111,112,113,114,117,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,204,-46,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,204,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'NOTEQUAL':([78,94,96,100,103,111,112,113,114,117,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,205,-46,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,205,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'XOR':([78,94,96,100,103,111,112,113,114,115,116,117,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,-2,-3,-4,-5,202,-51,-49,-46,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,202,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'OR':([78,94,96,100,103,110,111,112,113,114,115,116,117,118,119,120,121,126,128,192,193,194,196,197,198,240,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,-9,201,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-11,-12,-14,201,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'LAND':([78,94,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,126,128,192,193,194,196,197,198,240,250,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,-17,-31,200,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,200,-11,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'CONDOP':([78,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,126,128,192,193,194,196,197,198,240,250,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,186,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-58,-11,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'LOR':([78,94,95,96,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,126,128,192,193,194,196,197,198,240,250,252,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,290,291,293,],[-1,-29,187,-17,-31,-57,-9,-55,-2,-3,-4,-5,-53,-51,-49,-46,-41,-38,-35,-29,-1,-15,-16,-18,-19,-20,-21,-6,-58,-11,-12,-14,-56,-54,-52,-50,-47,-48,-42,-43,-44,-45,-39,-40,-36,-37,-32,-33,-34,-30,-10,-13,-22,]),'ELLIPSIS':([221,],[276,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,33,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,6,34,38,41,60,69,],[4,4,40,40,66,40,66,66,]),'declaration_specifiers':([0,1,6,7,8,9,34,38,41,50,58,60,69,140,221,225,],[5,5,42,43,44,46,42,42,42,135,135,42,42,135,135,135,]),'declarator':([0,1,5,31,42,64,135,225,],[6,6,34,54,122,122,222,54,]),'storage_class_specifier':([0,1,6,7,8,9,34,38,41,50,58,60,69,140,221,225,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'type_specifier':([0,1,6,7,8,9,34,38,41,50,58,60,69,83,127,140,163,164,199,221,225,],[8,8,8,8,8,8,8,8,8,8,8,8,8,163,163,8,163,163,163,8,8,]),'type_qualifier':([0,1,6,7,8,9,29,34,38,41,50,51,58,60,69,83,127,140,163,164,199,221,225,],[9,9,9,9,9,9,53,9,9,9,9,137,9,9,9,164,164,9,164,164,164,9,9,]),'pointer':([0,1,5,29,31,32,42,45,47,51,58,64,135,225,],[10,10,10,52,10,56,10,56,56,136,56,10,224,224,]),'direct_declarator':([0,1,5,10,31,42,64,135,224,225,],[11,11,11,48,11,11,11,11,48,11,]),'type_name':([0,1,6,7,8,9,34,38,41,50,58,60,69,83,127,140,163,164,199,221,225,],[26,26,26,26,26,26,26,26,26,26,26,26,26,162,162,26,26,26,257,26,26,]),'specifier_qualifier_list':([0,1,6,7,8,9,34,38,41,50,58,60,69,83,127,140,163,164,199,221,225,],[32,32,32,32,45,47,32,32,32,32,32,32,32,32,32,32,45,47,32,32,32,]),'init_declarator_list':([5,42,],[36,36,]),'init_declarator':([5,42,64,],[37,37,150,]),'declaration_list':([6,34,41,],[38,60,69,]),'compound_statement':([6,34,38,41,60,68,69,86,154,155,157,236,283,285,299,303,306,],[39,61,65,72,146,72,72,72,72,72,72,72,72,72,72,72,72,]),'type_qualifier_list':([29,],[51,]),'abstract_declarator':([32,45,47,58,135,225,],[55,55,55,141,223,141,]),'direct_abstract_declarator':([32,45,47,56,58,135,224,225,],[57,57,57,139,57,57,139,57,]),'statement_list':([41,69,],[68,154,]),'statement':([41,68,69,86,154,155,157,236,283,285,299,303,306,],[70,152,70,167,152,235,237,282,296,297,305,307,309,]),'labeled_statement':([41,68,69,86,154,155,157,236,283,285,299,303,306,],[71,71,71,71,71,71,71,71,71,71,71,71,71,]),'expression_statement':([41,68,69,86,154,155,157,168,236,245,283,285,299,303,306,],[73,73,73,73,73,73,73,245,73,288,73,73,73,73,73,]),'selection_statement':([41,68,69,86,154,155,157,236,283,285,299,303,306,],[74,74,74,74,74,74,74,74,74,74,74,74,74,]),'iteration_statement':([41,68,69,86,154,155,157,236,283,285,299,303,306,],[75,75,75,75,75,75,75,75,75,75,75,75,75,]),'jump_statement':([41,68,69,86,154,155,157,236,283,285,299,303,306,],[76,76,76,76,76,76,76,76,76,76,76,76,76,]),'expression':([41,68,69,83,86,91,127,154,155,157,160,165,166,168,186,188,195,199,236,245,283,285,287,288,299,303,306,],[81,81,81,161,81,173,161,81,81,81,239,242,243,81,249,251,161,161,81,81,81,81,298,300,81,81,81,]),'assignment_expression':([41,62,68,69,83,86,91,127,149,154,155,157,159,160,165,166,168,174,186,188,189,195,199,236,245,281,283,285,287,288,292,299,303,306,],[92,148,92,92,92,92,92,92,148,92,92,92,238,92,92,92,92,248,92,92,254,92,92,92,92,148,92,92,92,92,302,92,92,92,]),'conditional_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,188,189,195,199,236,245,281,283,285,287,288,289,292,299,303,306,],[93,125,125,93,93,93,125,93,93,93,93,125,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,301,93,93,93,93,]),'unary_expression':([41,49,59,62,68,69,79,83,86,91,97,98,99,101,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,236,241,245,281,283,285,287,288,289,292,299,303,306,],[94,126,126,94,94,94,126,94,94,94,194,196,126,198,94,126,94,94,94,94,94,94,94,94,94,94,94,126,94,94,94,94,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,94,126,94,94,94,94,94,94,126,94,94,94,94,]),'logical_or_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,188,189,195,199,236,245,281,283,285,287,288,289,292,299,303,306,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'postfix_expression':([41,49,59,62,68,69,79,83,86,91,97,98,99,101,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,236,241,245,281,283,285,287,288,289,292,299,303,306,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'unary_operator':([41,49,59,62,68,69,79,83,86,91,97,98,99,101,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,236,241,245,281,283,285,287,288,289,292,299,303,306,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'cast_expression':([41,49,59,62,68,69,79,83,86,91,99,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,236,241,245,281,283,285,287,288,289,292,299,303,306,],[100,100,100,100,100,100,100,100,100,100,197,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,272,273,274,100,284,100,100,100,100,100,100,100,100,100,100,100,]),'logical_and_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,236,245,281,283,285,287,288,289,292,299,303,306,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,250,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'primary_expression':([41,49,59,62,68,69,79,83,86,91,97,98,99,101,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,236,241,245,281,283,285,287,288,289,292,299,303,306,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'inclusive_or_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,236,245,281,283,285,287,288,289,292,299,303,306,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,258,110,110,110,110,110,110,110,110,110,110,110,110,]),'exclusive_or_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,236,245,281,283,285,287,288,289,292,299,303,306,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,259,115,115,115,115,115,115,115,115,115,115,115,115,]),'and_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,236,245,281,283,285,287,288,289,292,299,303,306,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,260,116,116,116,116,116,116,116,116,116,116,116,116,]),'equality_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,236,245,281,283,285,287,288,289,292,299,303,306,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,261,117,117,117,117,117,117,117,117,117,117,117,117,]),'relational_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,236,245,281,283,285,287,288,289,292,299,303,306,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,262,263,118,118,118,118,118,118,118,118,118,118,118,118,]),'shift_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,236,245,281,283,285,287,288,289,292,299,303,306,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,264,265,266,267,119,119,119,119,119,119,119,119,119,119,119,119,]),'additive_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,236,245,281,283,285,287,288,289,292,299,303,306,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,268,269,120,120,120,120,120,120,120,120,120,120,120,120,]),'multiplicative_expression':([41,49,59,62,68,69,79,83,86,91,127,140,149,154,155,157,159,160,165,166,168,174,186,187,188,189,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,236,245,281,283,285,287,288,289,292,299,303,306,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,270,271,121,121,121,121,121,121,121,121,121,121,121,121,]),'constant_expression':([49,59,79,140,],[123,145,156,227,]),'parameter_type_list':([50,58,140,225,],[129,143,228,143,]),'identifier_list':([50,],[131,]),'parameter_list':([50,58,140,225,],[132,132,132,132,]),'parameter_declaration':([50,58,140,221,225,],[134,134,134,277,134,]),'initializer':([62,149,281,],[147,233,295,]),'assignment_operator':([94,],[174,]),'initializer_list':([149,],[232,]),'argument_expression_list':([189,],[253,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','parser.py',27),
  ('primary_expression -> INT_CONST','primary_expression',1,'p_primary_expression','parser.py',28),
  ('primary_expression -> FLOAT_CONST','primary_expression',1,'p_primary_expression','parser.py',29),
  ('primary_expression -> CHAR_CONST','primary_expression',1,'p_primary_expression','parser.py',30),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',31),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',32),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',40),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',41),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',51),
  ('postfix_expression -> postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET','postfix_expression',4,'p_postfix_expression','parser.py',52),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','parser.py',53),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression','parser.py',54),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','parser.py',55),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression','parser.py',56),
  ('postfix_expression -> postfix_expression INCREMENT','postfix_expression',2,'p_postfix_expression','parser.py',57),
  ('postfix_expression -> postfix_expression DECREMENT','postfix_expression',2,'p_postfix_expression','parser.py',58),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',62),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression','parser.py',63),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression','parser.py',64),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',65),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',66),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','parser.py',67),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','parser.py',71),
  ('unary_operator -> MULTIPLY','unary_operator',1,'p_unary_operator','parser.py',72),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','parser.py',73),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','parser.py',74),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','parser.py',75),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','parser.py',76),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',80),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',81),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multipicative_expression','parser.py',85),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',86),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',87),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',88),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',92),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',93),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',94),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',98),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',99),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',100),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',104),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','parser.py',105),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','parser.py',106),
  ('relational_expression -> relational_expression LESSEQUAL shift_expression','relational_expression',3,'p_relational_expression','parser.py',107),
  ('relational_expression -> relational_expression GREATEREQUAL shift_expression','relational_expression',3,'p_relational_expression','parser.py',108),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expresssion','parser.py',112),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expresssion','parser.py',113),
  ('equality_expression -> equality_expression NOTEQUAL relational_expression','equality_expression',3,'p_equality_expresssion','parser.py',114),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',118),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression','parser.py',119),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',123),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',124),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',128),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',129),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',133),
  ('logical_and_expression -> logical_and_expression LAND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',134),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',138),
  ('logical_or_expression -> logical_or_expression LOR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',139),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',143),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',144),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',148),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',149),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',153),
  ('assignment_operator -> MULTIPLYEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',154),
  ('assignment_operator -> DIVIDEEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',155),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',156),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',157),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',158),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',159),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',160),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',161),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',162),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',163),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',167),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',168),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',172),
  ('declaration -> declaration_specifiers SEMICOLON','declaration',2,'p_declaration','parser.py',175),
  ('declaration -> declaration_specifiers init_declarator_list SEMICOLON','declaration',3,'p_declaration','parser.py',176),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',180),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',181),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',182),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',183),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',184),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',185),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',189),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',190),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',193),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','parser.py',194),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',198),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser.py',199),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser.py',200),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',201),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser.py',202),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',206),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',207),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',208),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',209),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',210),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',211),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',212),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',213),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',214),
  ('type_specifier -> type_name','type_specifier',1,'p_type_specifier','parser.py',215),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',219),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',220),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',221),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',222),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',226),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser.py',227),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',232),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',233),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator','parser.py',237),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',238),
  ('direct_declarator -> direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET','direct_declarator',4,'p_direct_declarator','parser.py',239),
  ('direct_declarator -> direct_declarator LSQUAREBRACKET RSQUAREBRACKET','direct_declarator',3,'p_direct_declarator','parser.py',240),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',241),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',242),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',243),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',247),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',248),
  ('pointer -> MULTIPLY','pointer',1,'p_pointer','parser.py',251),
  ('pointer -> MULTIPLY type_qualifier_list','pointer',2,'p_pointer','parser.py',252),
  ('pointer -> MULTIPLY type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',253),
  ('pointer -> MULTIPLY pointer','pointer',2,'p_pointer','parser.py',254),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',259),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser.py',260),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',264),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',265),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',269),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',270),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',271),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','parser.py',275),
  ('identifier_list -> identifier_list COMMA ID','identifier_list',3,'p_identifier_list','parser.py',276),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',280),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',281),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',285),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',286),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',287),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',291),
  ('direct_abstract_declarator -> LSQUAREBRACKET RSQUAREBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',292),
  ('direct_abstract_declarator -> LSQUAREBRACKET constant_expression RSQUAREBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',293),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',294),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN constant_expression RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',295),
  ('direct_abstract_declarator -> LPAREN RPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',296),
  ('direct_abstract_declarator -> LPAREN parameter_type_list RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',297),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',298),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',302),
  ('initializer -> LCURLYBRACKET initializer_list RCURLYBRACKET','initializer',3,'p_initializer','parser.py',303),
  ('initializer -> LCURLYBRACKET initializer_list COMMA RCURLYBRACKET','initializer',4,'p_initializer','parser.py',304),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',308),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser.py',309),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',313),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',314),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',315),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',316),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',317),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',318),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',322),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',323),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',324),
  ('compound_statement -> LCURLYBRACKET RCURLYBRACKET','compound_statement',2,'p_compound_statement','parser.py',328),
  ('compound_statement -> LCURLYBRACKET statement_list RCURLYBRACKET','compound_statement',3,'p_compound_statement','parser.py',329),
  ('compound_statement -> LCURLYBRACKET declaration_list RCURLYBRACKET','compound_statement',3,'p_compound_statement','parser.py',330),
  ('compound_statement -> LCURLYBRACKET declaration_list statement_list RCURLYBRACKET','compound_statement',4,'p_compound_statement','parser.py',331),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',335),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',336),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',340),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',341),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',345),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',346),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',350),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',351),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',352),
  ('iteration_statement -> WHILE LPAREN expression RPAREN','iteration_statement',4,'p_iteration_statement','parser.py',356),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parser.py',357),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement','parser.py',358),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',359),
  ('jump_statement -> GOTO ID SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',363),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',364),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',365),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',366),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',367),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',371),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',372),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',376),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',377),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser.py',381),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',382),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','parser.py',383),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','parser.py',384),
]
