
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unitleftLORleftLANDleftORleftXORleftANDleftEQUALNOTEQUALleftGREATERGREATEREQUALLESSLESSEQUALleftRSHIFTLSHIFTleftPLUSMINUSleftMULTIPLYDIVIDEMODAND ANDEQUAL ARROW AUTO BIN_CONST BREAK CASE CHAR CHAR_CONST COLON COMMA CONDOP CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDEEQUAL DO DOUBLE ELLIPSIS ELSE ENUM EQUAL EQUALS EXTERN FLOAT FLOAT_CONST FOR GOTO GREATER GREATEREQUAL HASH HEX_CONST ID IF INCREMENT INT INT_CONST LAND LCURLYBRACKET LESS LESSEQUAL LNOT LONG LOR LPAREN LSHIFT LSHIFTEQUAL LSQUAREBRACKET MINUS MINUSEQUAL MOD MODEQUAL MULTIPLY MULTIPLYEQUAL NOT NOTEQUAL OCTAL_CONST OR OREQUAL PERIOD PLUS PLUSEQUAL RCURLYBRACKET REGISTER RETURN RPAREN RSHIFT RSHIFTEQUAL RSQUAREBRACKET SEMICOLON SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XOR XOREQUALprimary_expression : ID\n                | INT_CONST\n                | FLOAT_CONST\n                | CHAR_CONST\n                | OCTAL_CONST\n                | HEX_CONST\n                | BIN_CONST\n                | STRING_LITERAL\n                | LPAREN expression RPAREN\n  postfix_expression : primary_expression\n\t| postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET\n\t| postfix_expression LPAREN RPAREN\n  | postfix_expression LPAREN argument_expression_list RPAREN\n  | postfix_expression PERIOD ID\n\t| postfix_expression ARROW ID\n\t| postfix_expression INCREMENT\n\t| postfix_expression DECREMENT\n  argument_expression_list : assignment_expression\n                              | argument_expression_list COMMA assignment_expression\n  unary_expression : postfix_expression\n                      | INCREMENT unary_expression\n                      | DECREMENT unary_expression\n                      | unary_operator cast_expression\n                      | SIZEOF unary_expression\n                      | SIZEOF LPAREN type_name RPAREN\n  unary_operator : AND\n                    | MULTIPLY\n                    | PLUS\n                    | MINUS\n                    | NOT\n                    | LNOT\n  cast_expression : unary_expression\n                     | LPAREN type_name RPAREN cast_expression\n  multiplicative_expression : cast_expression\n\t| multiplicative_expression MULTIPLY cast_expression\n\t| multiplicative_expression DIVIDE cast_expression\n\t| multiplicative_expression MOD cast_expression\n  additive_expression : multiplicative_expression\n\t| additive_expression PLUS multiplicative_expression\n\t| additive_expression MINUS multiplicative_expression\n  shift_expression : additive_expression\n\t| shift_expression LSHIFT additive_expression\n\t| shift_expression RSHIFT additive_expression\n\trelational_expression : shift_expression\n\t| relational_expression LESS shift_expression\n\t| relational_expression GREATER shift_expression\n\t| relational_expression LESSEQUAL shift_expression\n\t| relational_expression GREATEREQUAL shift_expression\n  equality_expression : relational_expression\n\t| equality_expression EQUAL relational_expression\n\t| equality_expression NOTEQUAL relational_expression\n  and_expression : equality_expression\n\t| and_expression AND equality_expression\n  exclusive_or_expression : and_expression\n\t| exclusive_or_expression XOR and_expression\n\tinclusive_or_expression : exclusive_or_expression\n\t| inclusive_or_expression OR exclusive_or_expression\n  logical_and_expression : inclusive_or_expression \n  | logical_and_expression LAND inclusive_or_expression\n  logical_or_expression : logical_and_expression\n\t| logical_or_expression LOR logical_and_expression\n  conditional_expression : logical_or_expression\n\t| logical_or_expression CONDOP expression COLON conditional_expression\n  assignment_expression : conditional_expression \n  | unary_expression assignment_operator assignment_expression\n  assignment_operator : EQUALS\n\t| MULTIPLYEQUAL\n\t| DIVIDEEQUAL\n\t| MODEQUAL\n\t| PLUSEQUAL\n\t| MINUSEQUAL\n\t| LSHIFTEQUAL\n\t| RSHIFTEQUAL\n\t| ANDEQUAL\n\t| XOREQUAL\n\t| OREQUAL\n\texpression : assignment_expression\n\t| expression COMMA assignment_expression\n  constant_expression : conditional_expressiondeclaration : declaration_specifiers SEMICOLON\n\t| declaration_specifiers init_declarator_list SEMICOLON\n  declaration_specifiers : storage_class_specifier\n\t| storage_class_specifier declaration_specifiers\n\t| type_specifier\n\t| type_specifier declaration_specifiers\n\t| type_qualifier\n\t| type_qualifier declaration_specifiers\n  init_declarator_list : init_declarator\n\t| init_declarator_list COMMA init_declarator\n  init_declarator : declarator\n\t| declarator EQUALS initializer\n  storage_class_specifier : TYPEDEF\n\t| EXTERN\n\t| STATIC\n\t| AUTO\n\t| REGISTER\n  type_specifier : VOID\n                    | CHAR\n                    | SHORT\n                    | INT\n                    | LONG\n                    | FLOAT\n                    | DOUBLE\n                    | SIGNED\n                    | UNSIGNED\n                    | struct_or_union_specifier\n                    | enum_specifier\n                    | type_name\n  struct_or_union_specifier : struct_or_union ID LCURLYBRACKET struct_declaration_list RCURLYBRACKET\n  | struct_or_union LCURLYBRACKET struct_declaration_list RCURLYBRACKET\n  | struct_or_union ID\n  struct_or_union : STRUCT\n\t| UNION\n  struct_declaration_list : struct_declaration\n\t| struct_declaration_list struct_declaration\n  struct_declaration : specifier_qualifier_list struct_declarator_list SEMICOLON\n  specifier_qualifier_list : type_specifier specifier_qualifier_list\n  | type_specifier\n  | type_qualifier specifier_qualifier_list\n  | type_qualifier\n  struct_declarator_list : struct_declarator\n\t| struct_declarator_list COMMA struct_declarator\n  struct_declarator : declarator\n\t| COLON constant_expression\n\t| declarator COLON constant_expression\n  enum_specifier : ENUM LCURLYBRACKET enumerator_list RCURLYBRACKET\n\t| ENUM ID LCURLYBRACKET enumerator_list RCURLYBRACKET\n\t| ENUM ID\n  enumerator_list : enumerator\n\t| enumerator_list COMMA enumerator\n  enumerator : ID\n\t| ID EQUALS constant_expression\n\ttype_qualifier : CONST\n                      | VOLATILE\n    declarator : pointer direct_declarator\n  | direct_declarator\n  direct_declarator : ID\n                        | LPAREN declarator RPAREN\n                        | direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET\n                        | direct_declarator LSQUAREBRACKET RSQUAREBRACKET\n                        | direct_declarator LPAREN parameter_type_list RPAREN\n                        | direct_declarator LPAREN identifier_list RPAREN\n                        | direct_declarator LPAREN RPAREN\n  pointer : MULTIPLY \n              | MULTIPLY type_qualifier_list\n              | MULTIPLY pointer\n              | MULTIPLY type_qualifier_list pointer\n  type_qualifier_list : type_qualifier\n                        | type_qualifier_list type_qualifier\n  parameter_type_list : parameter_list\n                          | parameter_list COMMA ELLIPSIS\n  parameter_list : parameter_declaration\n                      | parameter_list COMMA parameter_declaration\n    parameter_declaration : declaration_specifiers declarator\n                             | declaration_specifiers abstract_declarator\n                             | declaration_specifiers\n    identifier_list : ID\n                       | identifier_list COMMA ID\n    type_name : specifier_qualifier_list\n                 | specifier_qualifier_list abstract_declarator\n    abstract_declarator : pointer \n                           | direct_abstract_declarator\n                           | pointer direct_abstract_declarator\n    direct_abstract_declarator : LPAREN abstract_declarator RPAREN\n                                  | LSQUAREBRACKET RSQUAREBRACKET\n                                  | LSQUAREBRACKET constant_expression RSQUAREBRACKET\n                                  | direct_abstract_declarator LPAREN RPAREN\n                                  | direct_abstract_declarator LPAREN constant_expression RPAREN \n                                  | LPAREN RPAREN\n                                  | LPAREN parameter_type_list RPAREN\n                                  | direct_abstract_declarator LPAREN parameter_type_list RPAREN\n    initializer : assignment_expression\n                   | LCURLYBRACKET initializer_list RCURLYBRACKET\n                   | LCURLYBRACKET initializer_list COMMA RCURLYBRACKET                                   \n    initializer_list : initializer\n  | initializer_list COMMA initializer\n  statement : labeled_statement\n                 | compound_statement\n                 | expression_statement\n                 | selection_statement\n                 | iteration_statement\n                 | jump_statement\n    labeled_statement : ID COLON statement \n                         | CASE constant_expression COLON statement\n                         | DEFAULT COLON statement\n    compound_statement : LCURLYBRACKET RCURLYBRACKET\n                          | LCURLYBRACKET statement_list RCURLYBRACKET\n                          | LCURLYBRACKET declaration_list RCURLYBRACKET\n                          | LCURLYBRACKET declaration_list statement_list RCURLYBRACKET\n    declaration_list : declaration\n                        | declaration_list declaration\n    statement_list : statement\n                      | statement_list statement\n    expression_statement : SEMICOLON\n                            | expression SEMICOLON\n    selection_statement : IF LPAREN expression RPAREN statement\n                           | IF LPAREN expression RPAREN statement ELSE statement\n                           | SWITCH LPAREN expression RPAREN statement\n    iteration_statement : WHILE LPAREN expression RPAREN\n                           | DO statement WHILE LPAREN expression RPAREN SEMICOLON\n                           | FOR LPAREN expression_statement expression_statement RPAREN statement\n                           | FOR LPAREN expression_statement expression_statement expression RPAREN statement                                                 \n    jump_statement : GOTO ID SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | BREAK SEMICOLON\n                      | RETURN SEMICOLON\n                      | RETURN expression SEMICOLON\n    translation_unit : external_declaration\n                        | translation_unit external_declaration\n    external_declaration : function_definition\n                            | declaration\n    function_definition : declaration_specifiers declarator declaration_list compound_statement\n                           | declaration_specifiers declarator compound_statement\n                           | declarator declaration_list compound_statement\n                           | declarator compound_statement                                                                              \n    '
    
_lr_action_items = {'TYPEDEF':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,64,65,66,67,68,70,71,73,75,76,77,79,137,143,149,150,151,162,163,165,167,169,174,176,238,239,240,242,246,248,255,256,260,263,264,265,268,312,319,320,321,],[12,12,-208,-210,-211,12,12,12,12,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,12,-80,12,-215,-190,12,-117,-119,-135,12,-145,-146,-148,-111,-128,-160,-161,-162,12,12,-213,-81,-214,-191,-186,12,-140,-143,-147,-149,-138,-163,12,-169,-165,-212,-187,-188,-139,-141,-142,12,12,-110,12,-126,-167,-164,-170,-166,-189,-109,-127,-168,-171,]),'EXTERN':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,64,65,66,67,68,70,71,73,75,76,77,79,137,143,149,150,151,162,163,165,167,169,174,176,238,239,240,242,246,248,255,256,260,263,264,265,268,312,319,320,321,],[13,13,-208,-210,-211,13,13,13,13,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,13,-80,13,-215,-190,13,-117,-119,-135,13,-145,-146,-148,-111,-128,-160,-161,-162,13,13,-213,-81,-214,-191,-186,13,-140,-143,-147,-149,-138,-163,13,-169,-165,-212,-187,-188,-139,-141,-142,13,13,-110,13,-126,-167,-164,-170,-166,-189,-109,-127,-168,-171,]),'STATIC':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,64,65,66,67,68,70,71,73,75,76,77,79,137,143,149,150,151,162,163,165,167,169,174,176,238,239,240,242,246,248,255,256,260,263,264,265,268,312,319,320,321,],[14,14,-208,-210,-211,14,14,14,14,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,14,-80,14,-215,-190,14,-117,-119,-135,14,-145,-146,-148,-111,-128,-160,-161,-162,14,14,-213,-81,-214,-191,-186,14,-140,-143,-147,-149,-138,-163,14,-169,-165,-212,-187,-188,-139,-141,-142,14,14,-110,14,-126,-167,-164,-170,-166,-189,-109,-127,-168,-171,]),'AUTO':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,64,65,66,67,68,70,71,73,75,76,77,79,137,143,149,150,151,162,163,165,167,169,174,176,238,239,240,242,246,248,255,256,260,263,264,265,268,312,319,320,321,],[15,15,-208,-210,-211,15,15,15,15,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,15,-80,15,-215,-190,15,-117,-119,-135,15,-145,-146,-148,-111,-128,-160,-161,-162,15,15,-213,-81,-214,-191,-186,15,-140,-143,-147,-149,-138,-163,15,-169,-165,-212,-187,-188,-139,-141,-142,15,15,-110,15,-126,-167,-164,-170,-166,-189,-109,-127,-168,-171,]),'REGISTER':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,64,65,66,67,68,70,71,73,75,76,77,79,137,143,149,150,151,162,163,165,167,169,174,176,238,239,240,242,246,248,255,256,260,263,264,265,268,312,319,320,321,],[16,16,-208,-210,-211,16,16,16,16,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,16,-80,16,-215,-190,16,-117,-119,-135,16,-145,-146,-148,-111,-128,-160,-161,-162,16,16,-213,-81,-214,-191,-186,16,-140,-143,-147,-149,-138,-163,16,-169,-165,-212,-187,-188,-139,-141,-142,16,16,-110,16,-126,-167,-164,-170,-166,-189,-109,-127,-168,-171,]),'VOID':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[17,17,-208,-210,-211,17,17,17,17,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,17,-80,17,-215,-190,17,-117,-119,-135,17,-145,-146,-148,-111,17,-128,-160,-161,-162,17,17,-213,-81,-214,-191,-186,17,17,-140,17,-143,-147,-149,-138,17,17,-114,-159,17,17,-163,17,-169,-165,-212,-187,-188,-108,17,-139,-141,-142,17,17,17,-110,-115,-161,17,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'CHAR':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[18,18,-208,-210,-211,18,18,18,18,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,18,-80,18,-215,-190,18,-117,-119,-135,18,-145,-146,-148,-111,18,-128,-160,-161,-162,18,18,-213,-81,-214,-191,-186,18,18,-140,18,-143,-147,-149,-138,18,18,-114,-159,18,18,-163,18,-169,-165,-212,-187,-188,-108,18,-139,-141,-142,18,18,18,-110,-115,-161,18,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'SHORT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[19,19,-208,-210,-211,19,19,19,19,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,19,-80,19,-215,-190,19,-117,-119,-135,19,-145,-146,-148,-111,19,-128,-160,-161,-162,19,19,-213,-81,-214,-191,-186,19,19,-140,19,-143,-147,-149,-138,19,19,-114,-159,19,19,-163,19,-169,-165,-212,-187,-188,-108,19,-139,-141,-142,19,19,19,-110,-115,-161,19,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'INT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[20,20,-208,-210,-211,20,20,20,20,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,20,-80,20,-215,-190,20,-117,-119,-135,20,-145,-146,-148,-111,20,-128,-160,-161,-162,20,20,-213,-81,-214,-191,-186,20,20,-140,20,-143,-147,-149,-138,20,20,-114,-159,20,20,-163,20,-169,-165,-212,-187,-188,-108,20,-139,-141,-142,20,20,20,-110,-115,-161,20,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'LONG':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[21,21,-208,-210,-211,21,21,21,21,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,21,-80,21,-215,-190,21,-117,-119,-135,21,-145,-146,-148,-111,21,-128,-160,-161,-162,21,21,-213,-81,-214,-191,-186,21,21,-140,21,-143,-147,-149,-138,21,21,-114,-159,21,21,-163,21,-169,-165,-212,-187,-188,-108,21,-139,-141,-142,21,21,21,-110,-115,-161,21,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'FLOAT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[22,22,-208,-210,-211,22,22,22,22,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,22,-80,22,-215,-190,22,-117,-119,-135,22,-145,-146,-148,-111,22,-128,-160,-161,-162,22,22,-213,-81,-214,-191,-186,22,22,-140,22,-143,-147,-149,-138,22,22,-114,-159,22,22,-163,22,-169,-165,-212,-187,-188,-108,22,-139,-141,-142,22,22,22,-110,-115,-161,22,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'DOUBLE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[23,23,-208,-210,-211,23,23,23,23,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,23,-80,23,-215,-190,23,-117,-119,-135,23,-145,-146,-148,-111,23,-128,-160,-161,-162,23,23,-213,-81,-214,-191,-186,23,23,-140,23,-143,-147,-149,-138,23,23,-114,-159,23,23,-163,23,-169,-165,-212,-187,-188,-108,23,-139,-141,-142,23,23,23,-110,-115,-161,23,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'SIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[24,24,-208,-210,-211,24,24,24,24,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,24,-80,24,-215,-190,24,-117,-119,-135,24,-145,-146,-148,-111,24,-128,-160,-161,-162,24,24,-213,-81,-214,-191,-186,24,24,-140,24,-143,-147,-149,-138,24,24,-114,-159,24,24,-163,24,-169,-165,-212,-187,-188,-108,24,-139,-141,-142,24,24,24,-110,-115,-161,24,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'UNSIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[25,25,-208,-210,-211,25,25,25,25,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,25,-80,25,-215,-190,25,-117,-119,-135,25,-145,-146,-148,-111,25,-128,-160,-161,-162,25,25,-213,-81,-214,-191,-186,25,25,-140,25,-143,-147,-149,-138,25,25,-114,-159,25,25,-163,25,-169,-165,-212,-187,-188,-108,25,-139,-141,-142,25,25,25,-110,-115,-161,25,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'CONST':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[29,29,-208,-210,-211,29,29,29,29,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,29,-80,29,-215,-190,29,-117,-119,-135,29,-145,-146,-148,-111,29,-128,-160,-161,-162,29,29,-213,-81,-214,-191,-186,29,29,-140,29,-143,-147,-149,-138,29,29,-114,-159,29,29,-163,29,-169,-165,-212,-187,-188,-108,29,-139,-141,-142,29,29,29,-110,-115,-161,29,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[30,30,-208,-210,-211,30,30,30,30,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,30,-80,30,-215,-190,30,-117,-119,-135,30,-145,-146,-148,-111,30,-128,-160,-161,-162,30,30,-213,-81,-214,-191,-186,30,30,-140,30,-143,-147,-149,-138,30,30,-114,-159,30,30,-163,30,-169,-165,-212,-187,-188,-108,30,-139,-141,-142,30,30,30,-110,-115,-161,30,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'MULTIPLY':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,36,39,41,45,46,47,48,49,50,51,52,53,55,57,58,59,61,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,101,104,106,107,108,109,110,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,134,139,140,141,148,149,150,155,156,157,162,163,165,167,169,172,174,175,176,177,178,180,181,182,183,185,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,246,248,252,254,255,256,258,260,263,264,265,268,269,270,271,274,275,279,280,281,286,289,290,291,304,305,306,307,308,312,314,315,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,340,341,343,347,349,350,351,352,353,],[31,31,-208,-210,-211,31,-82,-84,-86,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,31,31,-209,-80,-215,-190,115,31,-83,-85,31,-87,31,115,-145,-146,-148,-111,-128,-160,-161,-162,31,115,-213,115,-81,31,-214,-191,-186,115,115,-192,-177,-178,-179,-180,-181,-182,-194,-1,115,115,115,115,-32,-20,115,115,115,-34,115,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,235,-32,115,-1,31,-147,-149,31,-118,-120,-163,115,-169,-165,-212,115,-187,-193,-188,115,115,115,-195,115,115,-108,115,115,115,-204,-205,-206,115,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,115,115,115,115,-16,-17,-21,115,-22,-23,-24,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,31,-110,-161,115,31,-126,115,-167,-164,-170,-166,-189,-183,115,-185,-9,115,115,-203,-207,-12,-14,-15,-108,235,235,-35,-36,-37,-109,31,115,-127,-168,-171,115,-184,115,-33,115,-199,115,115,115,-11,-13,115,-25,-196,-198,115,115,-201,115,-197,-200,-202,]),'ID':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,52,53,55,56,57,58,59,61,63,64,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,98,101,107,108,109,111,114,115,116,117,118,119,140,148,149,150,155,156,157,161,162,163,165,167,169,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,245,246,248,252,254,255,256,257,258,260,263,264,265,268,269,270,271,275,279,280,281,312,314,315,319,320,321,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[32,32,-208,-210,-211,32,-82,-84,-86,32,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,32,61,64,-159,-112,-113,-209,-80,-215,-190,88,32,-83,-85,-117,-87,-119,141,146,-145,-146,-148,-111,160,-128,-160,-161,-162,141,-213,141,-81,32,-214,-191,-186,88,88,-192,-177,-178,-179,-180,-181,-182,-194,141,141,88,190,141,141,141,141,141,-26,-27,-28,-29,-30,-31,141,32,-147,-149,32,-118,-120,160,-163,141,-169,-165,-212,141,-187,-193,-188,88,88,88,-195,141,141,141,141,141,-204,-205,-206,141,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,141,141,141,141,289,290,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,309,32,32,-110,32,141,32,-126,160,141,-167,-164,-170,-166,-189,-183,88,-185,141,141,-203,-207,-109,32,141,-127,-168,-171,141,-184,88,88,-199,141,141,141,141,-196,-198,88,88,-201,88,-197,-200,-202,]),'LPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,39,41,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,101,106,107,108,109,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,137,140,141,143,148,149,150,151,155,156,157,162,163,165,167,169,172,174,175,176,177,178,180,181,182,183,185,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,245,246,248,252,254,255,256,258,260,263,264,265,268,269,270,271,274,275,278,279,280,281,286,289,290,291,312,314,315,319,320,321,323,324,325,327,328,329,330,331,332,333,334,340,341,343,347,349,350,351,352,353,],[33,33,-208,-210,-211,33,-82,-84,-86,33,56,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,33,68,-209,-80,-215,-190,93,33,-83,-85,68,-87,68,56,140,-145,-146,-148,-111,-128,-160,68,163,68,140,-213,93,-81,33,-214,-191,-186,93,93,-192,-177,-178,-179,-180,-181,-182,-194,-1,140,183,93,186,187,93,189,93,210,216,216,140,220,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,-140,93,-1,-143,246,-147,-149,-138,255,-118,-120,163,140,-169,-165,-212,93,-187,-193,-188,93,93,93,-195,93,93,-108,93,93,93,-204,-205,-206,93,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,93,140,93,93,-16,-17,93,93,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-139,-141,-142,246,246,-110,255,140,255,-126,140,-167,-164,-170,-166,-189,-183,93,-185,-9,140,329,93,-203,-207,-12,-14,-15,-108,-109,33,140,-127,-168,-171,93,-184,93,93,-199,93,93,140,-11,-13,93,-196,-198,93,93,-201,93,-197,-200,-202,]),'ENUM':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[35,35,-208,-210,-211,35,35,35,35,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,35,-80,35,-215,-190,35,-117,-119,-135,35,-145,-146,-148,-111,35,-128,-160,-161,-162,35,35,-213,-81,-214,-191,-186,35,35,-140,35,-143,-147,-149,-138,35,35,-114,-159,35,35,-163,35,-169,-165,-212,-187,-188,-108,35,-139,-141,-142,35,35,35,-110,-115,-161,35,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'STRUCT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[37,37,-208,-210,-211,37,37,37,37,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,37,-80,37,-215,-190,37,-117,-119,-135,37,-145,-146,-148,-111,37,-128,-160,-161,-162,37,37,-213,-81,-214,-191,-186,37,37,-140,37,-143,-147,-149,-138,37,37,-114,-159,37,37,-163,37,-169,-165,-212,-187,-188,-108,37,-139,-141,-142,37,37,37,-110,-115,-161,37,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'UNION':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,39,40,41,44,45,46,47,51,53,54,56,57,58,59,61,62,64,65,66,67,68,70,71,73,75,76,77,79,93,137,140,143,149,150,151,152,153,154,155,156,157,162,163,165,167,169,174,176,185,220,238,239,240,242,246,247,248,249,252,255,256,260,263,264,265,268,291,312,313,319,320,321,],[38,38,-208,-210,-211,38,38,38,38,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-209,38,-80,38,-215,-190,38,-117,-119,-135,38,-145,-146,-148,-111,38,-128,-160,-161,-162,38,38,-213,-81,-214,-191,-186,38,38,-140,38,-143,-147,-149,-138,38,38,-114,-159,38,38,-163,38,-169,-165,-212,-187,-188,-108,38,-139,-141,-142,38,38,38,-110,-115,-161,38,-126,-167,-164,-170,-166,-189,-108,-109,-116,-127,-168,-171,]),'$end':([1,2,3,4,39,41,45,71,73,75,77,169,174,176,268,],[0,-208,-210,-211,-209,-80,-215,-213,-81,-214,-186,-212,-187,-188,-189,]),'SEMICOLON':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,59,61,64,65,66,67,73,76,77,78,79,80,81,82,83,84,85,86,87,88,91,96,99,100,101,102,103,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,141,143,149,150,151,162,165,167,170,171,173,174,175,176,177,178,180,181,189,190,191,192,193,194,213,214,215,217,218,219,238,239,240,248,250,251,253,256,260,263,264,265,268,269,270,271,272,274,279,280,281,282,284,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,312,316,319,320,321,322,324,325,326,327,328,332,333,335,336,337,338,340,341,343,345,347,348,349,350,351,352,353,],[41,-82,-84,-86,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-90,-80,73,-88,-190,87,41,-83,-85,-117,-87,-119,-135,-145,-146,-148,-111,-128,-160,-161,-162,-81,-191,-186,87,87,-192,-177,-178,-179,-180,-181,-182,-194,-1,181,87,191,192,193,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-90,-140,-79,-32,-1,-143,-147,-149,-138,-163,-169,-165,-91,-172,-89,-187,-193,-188,87,87,87,-195,87,280,-204,-205,-206,281,-16,-17,-21,-22,-23,-24,-139,-141,-142,-110,313,-121,-123,-126,-167,-164,-170,-166,-189,-183,87,-185,-78,-9,87,-203,-207,-65,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-109,-124,-127,-168,-171,-173,-184,87,-33,87,-199,-11,-13,-25,-122,-125,-174,-196,-198,87,-63,87,352,-201,87,-197,-200,-202,]),'LCURLYBRACKET':([6,11,32,34,35,37,38,40,41,44,46,47,54,61,64,70,72,73,76,77,78,79,80,81,82,83,84,85,86,87,96,137,143,151,172,174,175,176,177,178,180,181,191,192,193,238,239,240,268,269,270,271,280,281,323,324,325,327,328,340,341,343,347,349,350,351,352,353,],[47,-136,-137,62,63,-112,-113,47,-80,47,-190,47,-135,152,161,47,172,-81,-191,-186,47,47,-192,-177,-178,-179,-180,-181,-182,-194,47,-140,-143,-138,172,-187,-193,-188,47,47,47,-195,-204,-205,-206,-139,-141,-142,-189,-183,47,-185,-203,-207,172,-184,47,47,-199,-196,-198,47,47,-201,47,-197,-200,-202,]),'LSQUAREBRACKET':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,49,50,51,52,53,54,57,58,59,61,64,65,66,67,68,88,106,113,121,122,123,124,125,126,127,137,141,143,148,149,150,151,155,156,157,162,165,167,185,213,214,238,239,240,245,246,248,252,255,256,260,263,264,265,274,286,289,290,291,312,319,320,321,332,333,],[-82,-84,-86,55,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,69,-83,-85,69,-87,69,55,-145,-146,-148,-111,-128,-160,69,-162,69,-1,209,-10,-2,-3,-4,-5,-6,-7,-8,-140,-1,-143,69,-147,-149,-138,69,-118,-120,-163,-169,-165,-108,-16,-17,-139,-141,-142,69,69,-110,69,69,-126,-167,-164,-170,-166,-9,-12,-14,-15,-108,-109,-127,-168,-171,-11,-13,]),'COMMA':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,40,42,43,49,50,51,52,53,54,57,58,59,61,64,65,66,67,88,91,102,103,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,141,143,144,145,146,147,148,149,150,151,158,159,160,162,165,167,170,171,173,184,194,213,214,215,217,218,219,238,239,240,243,244,245,248,250,251,253,256,259,260,263,264,265,266,267,272,273,274,276,277,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,316,317,318,319,320,321,322,326,332,333,335,336,337,338,339,342,344,345,346,],[-82,-84,-86,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-90,74,-88,-83,-85,-117,-87,-119,-135,-145,-146,-148,-111,-128,-160,-161,-162,-1,182,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-90,-140,-79,-32,-1,-143,241,242,-157,-152,-156,-147,-149,-138,257,-129,-131,-163,-169,-165,-91,-172,-89,182,182,-16,-17,-21,-22,-23,-24,-139,-141,-142,-154,-155,-161,-110,314,-121,-123,-126,257,-167,-164,-170,-166,323,-175,-78,182,-9,182,182,-65,182,-61,182,-12,334,-18,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-158,-153,-109,-124,-130,-132,-127,-168,-171,-173,-33,-11,-13,-25,-122,-125,-174,-176,182,182,-63,-19,]),'RPAREN':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,49,50,51,52,53,54,56,57,58,59,60,61,64,65,66,67,68,87,102,103,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,139,141,142,143,144,145,146,147,148,149,150,151,156,157,162,163,164,165,166,167,181,184,185,210,213,214,215,217,218,219,238,239,240,243,244,245,246,248,252,255,256,260,261,262,263,264,265,272,273,274,276,277,282,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,319,320,321,326,330,332,333,335,342,344,345,346,],[-82,-84,-86,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-159,-83,-85,-117,-87,-119,-135,143,-145,-146,-148,151,-111,-128,-160,-161,-162,165,-194,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-140,-79,-32,-1,239,-143,240,-150,-157,-152,-156,-147,-149,-138,-118,-120,-163,260,263,-169,264,-165,-195,274,275,286,-16,-17,-21,-22,-23,-24,-139,-141,-142,-154,-155,-161,165,-110,-161,165,-126,-167,320,321,-164,-170,-166,-78,325,-9,327,328,-65,-61,-12,333,-18,-14,-15,335,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-158,-151,-153,-109,-127,-168,-171,-33,343,-11,-13,-25,348,350,-63,-19,]),'EQUALS':([11,32,40,54,88,104,106,113,121,122,123,124,125,126,127,135,137,139,141,143,151,160,213,214,215,217,218,219,238,239,240,274,286,289,290,326,332,333,335,],[-136,-137,72,-135,-1,196,-20,-10,-2,-3,-4,-5,-6,-7,-8,72,-140,-32,-1,-143,-138,258,-16,-17,-21,-22,-23,-24,-139,-141,-142,-9,-12,-14,-15,-33,-11,-13,-25,]),'COLON':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,51,53,54,57,58,59,61,64,65,66,67,88,90,102,103,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,139,141,143,149,150,151,155,156,157,162,165,167,179,213,214,215,217,218,219,238,239,240,248,252,253,256,260,263,264,265,272,274,282,283,284,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,312,314,319,320,321,326,332,333,335,345,],[-136,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-117,-119,-135,-145,-146,-148,-111,-128,-160,-161,-162,178,180,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-140,-79,-32,-1,-143,-147,-149,-138,254,-118,-120,-163,-169,-165,270,-16,-17,-21,-22,-23,-24,-139,-141,-142,-110,-161,315,-126,-167,-164,-170,-166,-78,-9,-65,331,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-109,254,-127,-168,-171,-33,-11,-13,-25,-63,]),'RCURLYBRACKET':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,103,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,139,141,153,154,158,159,160,171,174,175,176,177,181,191,192,193,213,214,215,217,218,219,247,249,259,266,267,268,269,271,274,280,281,282,284,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,313,317,318,322,323,324,326,328,332,333,335,338,339,340,341,345,349,351,352,353,],[-80,-190,77,-81,-191,-186,174,176,-192,-177,-178,-179,-180,-181,-182,-194,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-79,-32,-1,248,-114,256,-129,-131,-172,-187,-193,-188,268,-195,-204,-205,-206,-16,-17,-21,-22,-23,-24,312,-115,319,322,-175,-189,-183,-185,-9,-203,-207,-65,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-116,-130,-132,-173,338,-184,-33,-199,-11,-13,-25,-174,-176,-196,-198,-63,-201,-197,-200,-202,]),'CASE':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,89,-81,-191,-186,89,89,-192,-177,-178,-179,-180,-181,-182,-194,89,-187,-193,-188,89,89,89,-195,-204,-205,-206,-189,-183,89,-185,-203,-207,-184,89,89,-199,-196,-198,89,89,-201,89,-197,-200,-202,]),'DEFAULT':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,90,-81,-191,-186,90,90,-192,-177,-178,-179,-180,-181,-182,-194,90,-187,-193,-188,90,90,90,-195,-204,-205,-206,-189,-183,90,-185,-203,-207,-184,90,90,-199,-196,-198,90,90,-201,90,-197,-200,-202,]),'IF':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,92,-81,-191,-186,92,92,-192,-177,-178,-179,-180,-181,-182,-194,92,-187,-193,-188,92,92,92,-195,-204,-205,-206,-189,-183,92,-185,-203,-207,-184,92,92,-199,-196,-198,92,92,-201,92,-197,-200,-202,]),'SWITCH':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,94,-81,-191,-186,94,94,-192,-177,-178,-179,-180,-181,-182,-194,94,-187,-193,-188,94,94,94,-195,-204,-205,-206,-189,-183,94,-185,-203,-207,-184,94,94,-199,-196,-198,94,94,-201,94,-197,-200,-202,]),'WHILE':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,188,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,95,-81,-191,-186,95,95,-192,-177,-178,-179,-180,-181,-182,-194,95,-187,-193,-188,95,95,95,-195,278,-204,-205,-206,-189,-183,95,-185,-203,-207,-184,95,95,-199,-196,-198,95,95,-201,95,-197,-200,-202,]),'DO':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,96,-81,-191,-186,96,96,-192,-177,-178,-179,-180,-181,-182,-194,96,-187,-193,-188,96,96,96,-195,-204,-205,-206,-189,-183,96,-185,-203,-207,-184,96,96,-199,-196,-198,96,96,-201,96,-197,-200,-202,]),'FOR':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,97,-81,-191,-186,97,97,-192,-177,-178,-179,-180,-181,-182,-194,97,-187,-193,-188,97,97,97,-195,-204,-205,-206,-189,-183,97,-185,-203,-207,-184,97,97,-199,-196,-198,97,97,-201,97,-197,-200,-202,]),'GOTO':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,98,-81,-191,-186,98,98,-192,-177,-178,-179,-180,-181,-182,-194,98,-187,-193,-188,98,98,98,-195,-204,-205,-206,-189,-183,98,-185,-203,-207,-184,98,98,-199,-196,-198,98,98,-201,98,-197,-200,-202,]),'CONTINUE':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,99,-81,-191,-186,99,99,-192,-177,-178,-179,-180,-181,-182,-194,99,-187,-193,-188,99,99,99,-195,-204,-205,-206,-189,-183,99,-185,-203,-207,-184,99,99,-199,-196,-198,99,99,-201,99,-197,-200,-202,]),'BREAK':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,100,-81,-191,-186,100,100,-192,-177,-178,-179,-180,-181,-182,-194,100,-187,-193,-188,100,100,100,-195,-204,-205,-206,-189,-183,100,-185,-203,-207,-184,100,100,-199,-196,-198,100,100,-201,100,-197,-200,-202,]),'RETURN':([41,46,47,73,76,77,78,79,80,81,82,83,84,85,86,87,96,174,175,176,177,178,180,181,191,192,193,268,269,270,271,280,281,324,325,327,328,340,341,343,347,349,350,351,352,353,],[-80,-190,101,-81,-191,-186,101,101,-192,-177,-178,-179,-180,-181,-182,-194,101,-187,-193,-188,101,101,101,-195,-204,-205,-206,-189,-183,101,-185,-203,-207,-184,101,101,-199,-196,-198,101,101,-201,101,-197,-200,-202,]),'INCREMENT':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,101,106,107,108,109,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,140,141,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,274,275,279,280,281,286,289,290,315,323,324,325,327,328,329,330,331,332,333,334,340,341,343,347,349,350,351,352,353,],[-80,-190,107,107,107,107,-81,-191,-186,107,107,-192,-177,-178,-179,-180,-181,-182,-194,-1,107,107,107,107,213,107,107,107,107,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,107,-1,107,107,-187,-193,-188,107,107,107,-195,107,107,107,107,107,-204,-205,-206,107,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,107,107,107,107,-16,-17,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-189,-183,107,-185,-9,107,107,-203,-207,-12,-14,-15,107,107,-184,107,107,-199,107,107,107,-11,-13,107,-196,-198,107,107,-201,107,-197,-200,-202,]),'DECREMENT':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,101,106,107,108,109,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,140,141,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,274,275,279,280,281,286,289,290,315,323,324,325,327,328,329,330,331,332,333,334,340,341,343,347,349,350,351,352,353,],[-80,-190,108,108,108,108,-81,-191,-186,108,108,-192,-177,-178,-179,-180,-181,-182,-194,-1,108,108,108,108,214,108,108,108,108,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,108,-1,108,108,-187,-193,-188,108,108,108,-195,108,108,108,108,108,-204,-205,-206,108,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,108,108,108,108,-16,-17,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-189,-183,108,-185,-9,108,108,-203,-207,-12,-14,-15,108,108,-184,108,108,-199,108,108,108,-11,-13,108,-196,-198,108,108,-201,108,-197,-200,-202,]),'SIZEOF':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,111,111,111,111,-81,-191,-186,111,111,-192,-177,-178,-179,-180,-181,-182,-194,111,111,111,111,111,111,111,111,-26,-27,-28,-29,-30,-31,111,111,111,-187,-193,-188,111,111,111,-195,111,111,111,111,111,-204,-205,-206,111,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-189,-183,111,-185,111,111,-203,-207,111,111,-184,111,111,-199,111,111,111,111,-196,-198,111,111,-201,111,-197,-200,-202,]),'AND':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,101,104,106,107,108,109,110,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,129,130,131,132,133,134,139,140,141,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,274,275,279,280,281,286,289,290,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,315,323,324,325,326,327,328,329,330,331,332,333,334,335,340,341,343,347,349,350,351,352,353,],[-80,-190,114,114,114,114,-81,-191,-186,114,114,-192,-177,-178,-179,-180,-181,-182,-194,-1,114,114,114,114,-32,-20,114,114,114,-34,114,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,224,-52,-49,-44,-41,-38,-32,114,-1,114,114,-187,-193,-188,114,114,114,-195,114,114,114,114,114,-204,-205,-206,114,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,114,114,114,114,-16,-17,-21,114,-22,-23,-24,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-189,-183,114,-185,-9,114,114,-203,-207,-12,-14,-15,224,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,114,114,-184,114,-33,114,-199,114,114,114,-11,-13,114,-25,-196,-198,114,114,-201,114,-197,-200,-202,]),'PLUS':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,101,104,106,107,108,109,110,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,133,134,139,140,141,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,274,275,279,280,281,286,289,290,302,303,304,305,306,307,308,315,323,324,325,326,327,328,329,330,331,332,333,334,335,340,341,343,347,349,350,351,352,353,],[-80,-190,116,116,116,116,-81,-191,-186,116,116,-192,-177,-178,-179,-180,-181,-182,-194,-1,116,116,116,116,-32,-20,116,116,116,-34,116,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,233,-38,-32,116,-1,116,116,-187,-193,-188,116,116,116,-195,116,116,116,116,116,-204,-205,-206,116,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,116,116,116,116,-16,-17,-21,116,-22,-23,-24,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-189,-183,116,-185,-9,116,116,-203,-207,-12,-14,-15,233,233,-39,-40,-35,-36,-37,116,116,-184,116,-33,116,-199,116,116,116,-11,-13,116,-25,-196,-198,116,116,-201,116,-197,-200,-202,]),'MINUS':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,101,104,106,107,108,109,110,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,133,134,139,140,141,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,274,275,279,280,281,286,289,290,302,303,304,305,306,307,308,315,323,324,325,326,327,328,329,330,331,332,333,334,335,340,341,343,347,349,350,351,352,353,],[-80,-190,117,117,117,117,-81,-191,-186,117,117,-192,-177,-178,-179,-180,-181,-182,-194,-1,117,117,117,117,-32,-20,117,117,117,-34,117,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,234,-38,-32,117,-1,117,117,-187,-193,-188,117,117,117,-195,117,117,117,117,117,-204,-205,-206,117,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,117,117,117,117,-16,-17,-21,117,-22,-23,-24,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-189,-183,117,-185,-9,117,117,-203,-207,-12,-14,-15,234,234,-39,-40,-35,-36,-37,117,117,-184,117,-33,117,-199,117,117,117,-11,-13,117,-25,-196,-198,117,117,-201,117,-197,-200,-202,]),'NOT':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,118,118,118,118,-81,-191,-186,118,118,-192,-177,-178,-179,-180,-181,-182,-194,118,118,118,118,118,118,118,118,-26,-27,-28,-29,-30,-31,118,118,118,-187,-193,-188,118,118,118,-195,118,118,118,118,118,-204,-205,-206,118,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-189,-183,118,-185,118,118,-203,-207,118,118,-184,118,118,-199,118,118,118,118,-196,-198,118,118,-201,118,-197,-200,-202,]),'LNOT':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,119,119,119,119,-81,-191,-186,119,119,-192,-177,-178,-179,-180,-181,-182,-194,119,119,119,119,119,119,119,119,-26,-27,-28,-29,-30,-31,119,119,119,-187,-193,-188,119,119,119,-195,119,119,119,119,119,-204,-205,-206,119,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-189,-183,119,-185,119,119,-203,-207,119,119,-184,119,119,-199,119,119,119,119,-196,-198,119,119,-201,119,-197,-200,-202,]),'INT_CONST':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,121,121,121,121,-81,-191,-186,121,121,-192,-177,-178,-179,-180,-181,-182,-194,121,121,121,121,121,121,121,121,-26,-27,-28,-29,-30,-31,121,121,121,-187,-193,-188,121,121,121,-195,121,121,121,121,121,-204,-205,-206,121,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-189,-183,121,-185,121,121,-203,-207,121,121,-184,121,121,-199,121,121,121,121,-196,-198,121,121,-201,121,-197,-200,-202,]),'FLOAT_CONST':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,122,122,122,122,-81,-191,-186,122,122,-192,-177,-178,-179,-180,-181,-182,-194,122,122,122,122,122,122,122,122,-26,-27,-28,-29,-30,-31,122,122,122,-187,-193,-188,122,122,122,-195,122,122,122,122,122,-204,-205,-206,122,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-189,-183,122,-185,122,122,-203,-207,122,122,-184,122,122,-199,122,122,122,122,-196,-198,122,122,-201,122,-197,-200,-202,]),'CHAR_CONST':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,123,123,123,123,-81,-191,-186,123,123,-192,-177,-178,-179,-180,-181,-182,-194,123,123,123,123,123,123,123,123,-26,-27,-28,-29,-30,-31,123,123,123,-187,-193,-188,123,123,123,-195,123,123,123,123,123,-204,-205,-206,123,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-189,-183,123,-185,123,123,-203,-207,123,123,-184,123,123,-199,123,123,123,123,-196,-198,123,123,-201,123,-197,-200,-202,]),'OCTAL_CONST':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,124,124,124,124,-81,-191,-186,124,124,-192,-177,-178,-179,-180,-181,-182,-194,124,124,124,124,124,124,124,124,-26,-27,-28,-29,-30,-31,124,124,124,-187,-193,-188,124,124,124,-195,124,124,124,124,124,-204,-205,-206,124,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-189,-183,124,-185,124,124,-203,-207,124,124,-184,124,124,-199,124,124,124,124,-196,-198,124,124,-201,124,-197,-200,-202,]),'HEX_CONST':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,125,125,125,125,-81,-191,-186,125,125,-192,-177,-178,-179,-180,-181,-182,-194,125,125,125,125,125,125,125,125,-26,-27,-28,-29,-30,-31,125,125,125,-187,-193,-188,125,125,125,-195,125,125,125,125,125,-204,-205,-206,125,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-189,-183,125,-185,125,125,-203,-207,125,125,-184,125,125,-199,125,125,125,125,-196,-198,125,125,-201,125,-197,-200,-202,]),'BIN_CONST':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,126,126,126,126,-81,-191,-186,126,126,-192,-177,-178,-179,-180,-181,-182,-194,126,126,126,126,126,126,126,126,-26,-27,-28,-29,-30,-31,126,126,126,-187,-193,-188,126,126,126,-195,126,126,126,126,126,-204,-205,-206,126,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-189,-183,126,-185,126,126,-203,-207,126,126,-184,126,126,-199,126,126,126,126,-196,-198,126,126,-201,126,-197,-200,-202,]),'STRING_LITERAL':([41,46,47,55,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,89,93,96,101,107,108,109,111,114,115,116,117,118,119,140,163,172,174,175,176,177,178,180,181,182,183,186,187,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,268,269,270,271,275,279,280,281,315,323,324,325,327,328,329,330,331,334,340,341,343,347,349,350,351,352,353,],[-80,-190,127,127,127,127,-81,-191,-186,127,127,-192,-177,-178,-179,-180,-181,-182,-194,127,127,127,127,127,127,127,127,-26,-27,-28,-29,-30,-31,127,127,127,-187,-193,-188,127,127,127,-195,127,127,127,127,127,-204,-205,-206,127,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-189,-183,127,-185,127,127,-203,-207,127,127,-184,127,127,-199,127,127,127,127,-196,-198,127,127,-201,127,-197,-200,-202,]),'RSQUAREBRACKET':([55,69,102,103,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,141,168,213,214,215,217,218,219,272,274,282,284,285,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,345,],[137,167,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,238,-79,-32,-1,265,-16,-17,-21,-22,-23,-24,-78,-9,-65,-61,332,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,-63,]),'ELSE':([77,81,82,83,84,85,86,87,174,176,181,191,192,193,268,269,271,280,281,324,328,340,341,349,351,352,353,],[-186,-177,-178,-179,-180,-181,-182,-194,-187,-188,-195,-204,-205,-206,-189,-183,-185,-203,-207,-184,-199,347,-198,-201,-197,-200,-202,]),'PERIOD':([88,106,113,121,122,123,124,125,126,127,141,213,214,274,286,289,290,332,333,],[-1,211,-10,-2,-3,-4,-5,-6,-7,-8,-1,-16,-17,-9,-12,-14,-15,-11,-13,]),'ARROW':([88,106,113,121,122,123,124,125,126,127,141,213,214,274,286,289,290,332,333,],[-1,212,-10,-2,-3,-4,-5,-6,-7,-8,-1,-16,-17,-9,-12,-14,-15,-11,-13,]),'MULTIPLYEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,197,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'DIVIDEEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,198,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'MODEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,199,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'PLUSEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,200,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'MINUSEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,201,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'LSHIFTEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,202,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'RSHIFTEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,203,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'ANDEQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,204,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'XOREQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,205,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'OREQUAL':([88,104,106,113,121,122,123,124,125,126,127,139,141,213,214,215,217,218,219,274,286,289,290,326,332,333,335,],[-1,206,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'DIVIDE':([88,104,106,110,113,121,122,123,124,125,126,127,134,139,141,213,214,215,217,218,219,274,286,289,290,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,236,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,236,236,-35,-36,-37,-33,-11,-13,-25,]),'MOD':([88,104,106,110,113,121,122,123,124,125,126,127,134,139,141,213,214,215,217,218,219,274,286,289,290,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,237,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,237,237,-35,-36,-37,-33,-11,-13,-25,]),'LSHIFT':([88,104,106,110,113,121,122,123,124,125,126,127,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,231,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,231,231,231,231,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'RSHIFT':([88,104,106,110,113,121,122,123,124,125,126,127,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,232,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,232,232,232,232,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LESS':([88,104,106,110,113,121,122,123,124,125,126,127,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,227,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,227,227,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'GREATER':([88,104,106,110,113,121,122,123,124,125,126,127,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,228,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,228,228,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LESSEQUAL':([88,104,106,110,113,121,122,123,124,125,126,127,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,229,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,229,229,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'GREATEREQUAL':([88,104,106,110,113,121,122,123,124,125,126,127,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,230,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,230,230,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'EQUAL':([88,104,106,110,113,121,122,123,124,125,126,127,130,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,225,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,225,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'NOTEQUAL':([88,104,106,110,113,121,122,123,124,125,126,127,130,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,226,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,226,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'XOR':([88,104,106,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,223,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,223,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'OR':([88,104,106,110,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,141,213,214,215,217,218,219,274,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,-10,222,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,222,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LAND':([88,104,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,141,213,214,215,217,218,219,274,284,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,-20,-34,221,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,221,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'CONDOP':([88,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,141,213,214,215,217,218,219,274,284,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,207,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LOR':([88,104,105,106,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,141,213,214,215,217,218,219,274,284,286,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,326,332,333,335,],[-1,-32,208,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'ELLIPSIS':([242,],[310,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,39,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,6,40,44,47,70,79,],[4,4,46,46,76,46,76,76,]),'declaration_specifiers':([0,1,6,7,8,9,40,44,47,56,68,70,79,163,242,246,255,],[5,5,48,49,50,52,48,48,48,148,148,48,48,148,148,148,148,]),'declarator':([0,1,5,33,48,74,148,155,246,255,314,],[6,6,40,60,135,135,243,253,60,60,253,]),'storage_class_specifier':([0,1,6,7,8,9,40,44,47,56,68,70,79,163,242,246,255,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'type_specifier':([0,1,6,7,8,9,40,44,47,56,62,68,70,79,93,140,152,153,156,157,163,220,242,246,247,255,],[8,8,8,8,8,8,8,8,8,8,156,8,8,8,156,156,156,156,156,156,8,156,8,8,156,8,]),'type_qualifier':([0,1,6,7,8,9,31,40,44,47,56,57,62,68,70,79,93,140,152,153,156,157,163,220,242,246,247,255,],[9,9,9,9,9,9,59,9,9,9,9,150,157,9,9,9,157,157,157,157,157,157,9,157,9,9,157,9,]),'pointer':([0,1,5,31,33,36,48,51,53,57,68,74,148,155,246,255,314,],[10,10,10,58,10,66,10,66,66,149,66,10,245,252,245,252,10,]),'direct_declarator':([0,1,5,10,33,48,74,148,155,245,246,252,255,314,],[11,11,11,54,11,11,11,11,11,54,11,54,11,11,]),'struct_or_union_specifier':([0,1,6,7,8,9,40,44,47,56,62,68,70,79,93,140,152,153,156,157,163,220,242,246,247,255,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'enum_specifier':([0,1,6,7,8,9,40,44,47,56,62,68,70,79,93,140,152,153,156,157,163,220,242,246,247,255,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'type_name':([0,1,6,7,8,9,40,44,47,56,62,68,70,79,93,140,152,153,156,157,163,220,242,246,247,255,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,185,185,28,28,28,28,28,291,28,28,28,28,]),'struct_or_union':([0,1,6,7,8,9,40,44,47,56,62,68,70,79,93,140,152,153,156,157,163,220,242,246,247,255,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'specifier_qualifier_list':([0,1,6,7,8,9,40,44,47,56,62,68,70,79,93,140,152,153,156,157,163,220,242,246,247,255,],[36,36,36,36,51,53,36,36,36,36,155,36,36,36,36,36,155,155,51,53,36,36,36,36,155,36,]),'init_declarator_list':([5,48,],[42,42,]),'init_declarator':([5,48,74,],[43,43,173,]),'declaration_list':([6,40,47,],[44,70,79,]),'compound_statement':([6,40,44,47,70,78,79,96,177,178,180,270,325,327,343,347,350,],[45,71,75,82,169,82,82,82,82,82,82,82,82,82,82,82,82,]),'type_qualifier_list':([31,],[57,]),'abstract_declarator':([36,51,53,68,148,155,246,255,],[65,65,65,164,244,65,164,164,]),'direct_abstract_declarator':([36,51,53,66,68,148,155,245,246,252,255,],[67,67,67,162,67,67,67,162,67,162,67,]),'statement_list':([47,79,],[78,177,]),'statement':([47,78,79,96,177,178,180,270,325,327,343,347,350,],[80,175,80,188,175,269,271,324,340,341,349,351,353,]),'labeled_statement':([47,78,79,96,177,178,180,270,325,327,343,347,350,],[81,81,81,81,81,81,81,81,81,81,81,81,81,]),'expression_statement':([47,78,79,96,177,178,180,189,270,279,325,327,343,347,350,],[83,83,83,83,83,83,83,279,83,330,83,83,83,83,83,]),'selection_statement':([47,78,79,96,177,178,180,270,325,327,343,347,350,],[84,84,84,84,84,84,84,84,84,84,84,84,84,]),'iteration_statement':([47,78,79,96,177,178,180,270,325,327,343,347,350,],[85,85,85,85,85,85,85,85,85,85,85,85,85,]),'jump_statement':([47,78,79,96,177,178,180,270,325,327,343,347,350,],[86,86,86,86,86,86,86,86,86,86,86,86,86,]),'expression':([47,78,79,93,96,101,140,177,178,180,183,186,187,189,207,209,216,220,270,279,325,327,329,330,343,347,350,],[91,91,91,184,91,194,184,91,91,91,273,276,277,91,283,285,184,184,91,91,91,91,342,344,91,91,91,]),'assignment_expression':([47,72,78,79,93,96,101,140,172,177,178,180,182,183,186,187,189,195,207,209,210,216,220,270,279,323,325,327,329,330,334,343,347,350,],[102,171,102,102,102,102,102,102,171,102,102,102,272,102,102,102,102,282,102,102,288,102,102,102,102,171,102,102,102,102,346,102,102,102,]),'conditional_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,209,210,216,220,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[103,138,138,103,103,103,138,103,103,103,103,138,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,138,138,103,103,138,103,103,103,103,103,345,103,103,103,103,]),'unary_expression':([47,55,69,72,78,79,89,93,96,101,107,108,109,111,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,270,275,279,315,323,325,327,329,330,331,334,343,347,350,],[104,139,139,104,104,104,139,104,104,104,215,217,139,219,104,139,104,104,104,104,104,104,104,104,104,104,104,139,104,104,104,104,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,104,139,104,139,104,104,104,104,104,139,104,104,104,104,]),'logical_or_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,209,210,216,220,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'postfix_expression':([47,55,69,72,78,79,89,93,96,101,107,108,109,111,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,270,275,279,315,323,325,327,329,330,331,334,343,347,350,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'unary_operator':([47,55,69,72,78,79,89,93,96,101,107,108,109,111,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,270,275,279,315,323,325,327,329,330,331,334,343,347,350,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'cast_expression':([47,55,69,72,78,79,89,93,96,101,109,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,270,275,279,315,323,325,327,329,330,331,334,343,347,350,],[110,110,110,110,110,110,110,110,110,110,218,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,306,307,308,110,110,110,326,110,110,110,110,110,110,110,110,110,110,110,110,]),'logical_and_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,284,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'primary_expression':([47,55,69,72,78,79,89,93,96,101,107,108,109,111,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,254,258,270,275,279,315,323,325,327,329,330,331,334,343,347,350,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'inclusive_or_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,292,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'exclusive_or_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,293,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'and_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,294,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'equality_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,295,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'relational_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,296,297,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'shift_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,298,299,300,301,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'additive_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,302,303,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'multiplicative_expression':([47,55,69,72,78,79,89,93,96,101,140,163,172,177,178,180,182,183,186,187,189,195,207,208,209,210,216,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,254,258,270,279,315,323,325,327,329,330,331,334,343,347,350,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,304,305,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'constant_expression':([55,69,89,163,254,258,315,],[136,168,179,261,316,318,337,]),'parameter_type_list':([56,68,163,246,255,],[142,166,262,166,166,]),'identifier_list':([56,],[144,]),'parameter_list':([56,68,163,246,255,],[145,145,145,145,145,]),'parameter_declaration':([56,68,163,242,246,255,],[147,147,147,311,147,147,]),'struct_declaration_list':([62,152,],[153,247,]),'struct_declaration':([62,152,153,247,],[154,154,249,249,]),'enumerator_list':([63,161,],[158,259,]),'enumerator':([63,161,257,],[159,159,317,]),'initializer':([72,172,323,],[170,267,339,]),'assignment_operator':([104,],[195,]),'struct_declarator_list':([155,],[250,]),'struct_declarator':([155,314,],[251,336,]),'initializer_list':([172,],[266,]),'argument_expression_list':([210,],[287,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','parser.py',121),
  ('primary_expression -> INT_CONST','primary_expression',1,'p_primary_expression','parser.py',122),
  ('primary_expression -> FLOAT_CONST','primary_expression',1,'p_primary_expression','parser.py',123),
  ('primary_expression -> CHAR_CONST','primary_expression',1,'p_primary_expression','parser.py',124),
  ('primary_expression -> OCTAL_CONST','primary_expression',1,'p_primary_expression','parser.py',125),
  ('primary_expression -> HEX_CONST','primary_expression',1,'p_primary_expression','parser.py',126),
  ('primary_expression -> BIN_CONST','primary_expression',1,'p_primary_expression','parser.py',127),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',128),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',129),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',135),
  ('postfix_expression -> postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET','postfix_expression',4,'p_postfix_expression','parser.py',136),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','parser.py',137),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','parser.py',138),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression','parser.py',139),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression','parser.py',140),
  ('postfix_expression -> postfix_expression INCREMENT','postfix_expression',2,'p_postfix_expression','parser.py',141),
  ('postfix_expression -> postfix_expression DECREMENT','postfix_expression',2,'p_postfix_expression','parser.py',142),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',148),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',149),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',160),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression','parser.py',161),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression','parser.py',162),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',163),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',164),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','parser.py',165),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','parser.py',171),
  ('unary_operator -> MULTIPLY','unary_operator',1,'p_unary_operator','parser.py',172),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','parser.py',173),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','parser.py',174),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','parser.py',175),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','parser.py',176),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',182),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',183),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multipicative_expression','parser.py',189),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',190),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',191),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',192),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',198),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',199),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',200),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',206),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',207),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',208),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',214),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','parser.py',215),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','parser.py',216),
  ('relational_expression -> relational_expression LESSEQUAL shift_expression','relational_expression',3,'p_relational_expression','parser.py',217),
  ('relational_expression -> relational_expression GREATEREQUAL shift_expression','relational_expression',3,'p_relational_expression','parser.py',218),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expresssion','parser.py',224),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expresssion','parser.py',225),
  ('equality_expression -> equality_expression NOTEQUAL relational_expression','equality_expression',3,'p_equality_expresssion','parser.py',226),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',232),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression','parser.py',233),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',239),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',240),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',246),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',247),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',253),
  ('logical_and_expression -> logical_and_expression LAND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',254),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',260),
  ('logical_or_expression -> logical_or_expression LOR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',261),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',267),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',268),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',274),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',275),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',281),
  ('assignment_operator -> MULTIPLYEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',282),
  ('assignment_operator -> DIVIDEEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',283),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',284),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',285),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',286),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',287),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',288),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',289),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',290),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',291),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',297),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',298),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',304),
  ('declaration -> declaration_specifiers SEMICOLON','declaration',2,'p_declaration','parser.py',308),
  ('declaration -> declaration_specifiers init_declarator_list SEMICOLON','declaration',3,'p_declaration','parser.py',309),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',315),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',316),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',317),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',318),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',319),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',320),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',326),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',327),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',333),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','parser.py',334),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',340),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser.py',341),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser.py',342),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',343),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser.py',344),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',350),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',351),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',352),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',353),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',354),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',355),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',356),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',357),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',358),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser.py',359),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser.py',360),
  ('type_specifier -> type_name','type_specifier',1,'p_type_specifier','parser.py',361),
  ('struct_or_union_specifier -> struct_or_union ID LCURLYBRACKET struct_declaration_list RCURLYBRACKET','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser.py',367),
  ('struct_or_union_specifier -> struct_or_union LCURLYBRACKET struct_declaration_list RCURLYBRACKET','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser.py',368),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser.py',369),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser.py',374),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser.py',375),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser.py',380),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser.py',381),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON','struct_declaration',3,'p_struct_declaration','parser.py',386),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',391),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',392),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',393),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',394),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser.py',400),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser.py',401),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser.py',406),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser.py',407),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser.py',408),
  ('enum_specifier -> ENUM LCURLYBRACKET enumerator_list RCURLYBRACKET','enum_specifier',4,'p_enum_specifier','parser.py',413),
  ('enum_specifier -> ENUM ID LCURLYBRACKET enumerator_list RCURLYBRACKET','enum_specifier',5,'p_enum_specifier','parser.py',414),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier','parser.py',415),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser.py',420),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','parser.py',421),
  ('enumerator -> ID','enumerator',1,'p_enumerator','parser.py',426),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','parser.py',427),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',432),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser.py',433),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',439),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',440),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator','parser.py',446),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',447),
  ('direct_declarator -> direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET','direct_declarator',4,'p_direct_declarator','parser.py',448),
  ('direct_declarator -> direct_declarator LSQUAREBRACKET RSQUAREBRACKET','direct_declarator',3,'p_direct_declarator','parser.py',449),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',450),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',451),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',452),
  ('pointer -> MULTIPLY','pointer',1,'p_pointer','parser.py',458),
  ('pointer -> MULTIPLY type_qualifier_list','pointer',2,'p_pointer','parser.py',459),
  ('pointer -> MULTIPLY pointer','pointer',2,'p_pointer','parser.py',460),
  ('pointer -> MULTIPLY type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',461),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',467),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',468),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',474),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser.py',475),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',481),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',482),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',488),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',489),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',490),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','parser.py',496),
  ('identifier_list -> identifier_list COMMA ID','identifier_list',3,'p_identifier_list','parser.py',497),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',503),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',504),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',510),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',511),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',512),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',518),
  ('direct_abstract_declarator -> LSQUAREBRACKET RSQUAREBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',519),
  ('direct_abstract_declarator -> LSQUAREBRACKET constant_expression RSQUAREBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',520),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',521),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN constant_expression RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',522),
  ('direct_abstract_declarator -> LPAREN RPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',523),
  ('direct_abstract_declarator -> LPAREN parameter_type_list RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',524),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',525),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',531),
  ('initializer -> LCURLYBRACKET initializer_list RCURLYBRACKET','initializer',3,'p_initializer','parser.py',532),
  ('initializer -> LCURLYBRACKET initializer_list COMMA RCURLYBRACKET','initializer',4,'p_initializer','parser.py',533),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',539),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser.py',540),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',546),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',547),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',548),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',549),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',550),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',551),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',557),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',558),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',559),
  ('compound_statement -> LCURLYBRACKET RCURLYBRACKET','compound_statement',2,'p_compound_statement','parser.py',565),
  ('compound_statement -> LCURLYBRACKET statement_list RCURLYBRACKET','compound_statement',3,'p_compound_statement','parser.py',566),
  ('compound_statement -> LCURLYBRACKET declaration_list RCURLYBRACKET','compound_statement',3,'p_compound_statement','parser.py',567),
  ('compound_statement -> LCURLYBRACKET declaration_list statement_list RCURLYBRACKET','compound_statement',4,'p_compound_statement','parser.py',568),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',574),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',575),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',581),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',582),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',588),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',589),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',595),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',596),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',597),
  ('iteration_statement -> WHILE LPAREN expression RPAREN','iteration_statement',4,'p_iteration_statement','parser.py',603),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parser.py',604),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement','parser.py',605),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',606),
  ('jump_statement -> GOTO ID SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',612),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',613),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',614),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',615),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',616),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',622),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',623),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',629),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',630),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser.py',636),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',637),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','parser.py',638),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','parser.py',639),
]
