
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unitAND ANDEQUAL ARROW AUTO BIN_CONST BREAK CASE CHAR CHAR_CONST COLON COMMA CONDOP CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDEEQUAL DO DOUBLE ELLIPSIS ELSE ENUM EQUAL EQUALS EXTERN FLOAT FLOAT_CONST FOR GOTO GREATER GREATEREQUAL HEX_CONST ID IF INCREMENT INT INT_CONST LAND LCURLYBRACKET LESS LESSEQUAL LNOT LONG LOR LPAREN LSHIFT LSHIFTEQUAL LSQUAREBRACKET MINUS MINUSEQUAL MOD MODEQUAL MULTIPLY MULTIPLYEQUAL NOT NOTEQUAL OCTAL_CONST OR OREQUAL PERIOD PLUS PLUSEQUAL RCURLYBRACKET REGISTER RETURN RPAREN RSHIFT RSHIFTEQUAL RSQUAREBRACKET SEMICOLON SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SWITCH TYPEDEF TYPE_NAME UNION UNSIGNED VOID VOLATILE WHILE XOR XOREQUALprimary_expression : ID\n                | CHAR_CONST\n                | INT_CONST\n                | FLOAT_CONST \n                | OCTAL_CONST\n                | HEX_CONST\n                | BIN_CONST\n                | STRING_LITERAL\n                | LPAREN expression RPAREN\n  postfix_expression : primary_expression\n\t| postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET\n\t| postfix_expression LPAREN RPAREN\n  | postfix_expression LPAREN argument_expression_list RPAREN\n  | postfix_expression PERIOD ID\n\t| postfix_expression ARROW ID\n\t| postfix_expression INCREMENT\n\t| postfix_expression DECREMENT\n  argument_expression_list : assignment_expression\n                              | argument_expression_list COMMA assignment_expression\n  unary_expression : postfix_expression\n                      | INCREMENT unary_expression\n                      | DECREMENT unary_expression\n                      | unary_operator cast_expression\n                      | SIZEOF unary_expression\n                      | SIZEOF LPAREN type_name RPAREN\n  unary_operator : AND\n                    | MULTIPLY\n                    | PLUS\n                    | MINUS\n                    | NOT\n                    | LNOT\n  cast_expression : unary_expression\n                     | LPAREN type_name RPAREN cast_expression\n  multiplicative_expression : cast_expression\n\t| multiplicative_expression MULTIPLY cast_expression\n\t| multiplicative_expression DIVIDE cast_expression\n\t| multiplicative_expression MOD cast_expression\n  additive_expression : multiplicative_expression\n\t| additive_expression PLUS multiplicative_expression\n\t| additive_expression MINUS multiplicative_expression\n  shift_expression : additive_expression\n\t| shift_expression LSHIFT additive_expression\n\t| shift_expression RSHIFT additive_expression\n\trelational_expression : shift_expression\n\t| relational_expression LESS shift_expression\n\t| relational_expression GREATER shift_expression\n\t| relational_expression LESSEQUAL shift_expression\n\t| relational_expression GREATEREQUAL shift_expression\n  equality_expression : relational_expression\n\t| equality_expression EQUAL relational_expression\n\t| equality_expression NOTEQUAL relational_expression\n  and_expression : equality_expression\n\t| and_expression AND equality_expression\n  exclusive_or_expression : and_expression\n\t| exclusive_or_expression XOR and_expression\n\tinclusive_or_expression : exclusive_or_expression\n\t| inclusive_or_expression OR exclusive_or_expression\n  logical_and_expression : inclusive_or_expression \n  | logical_and_expression LAND inclusive_or_expression\n  logical_or_expression : logical_and_expression\n\t| logical_or_expression LOR logical_and_expression\n  conditional_expression : logical_or_expression\n\t| logical_or_expression CONDOP expression COLON conditional_expression\n  assignment_expression : conditional_expression \n  | unary_expression assignment_operator assignment_expression\n  assignment_operator : EQUALS\n\t| MULTIPLYEQUAL\n\t| DIVIDEEQUAL\n\t| MODEQUAL\n\t| PLUSEQUAL\n\t| MINUSEQUAL\n\t| LSHIFTEQUAL\n\t| RSHIFTEQUAL\n\t| ANDEQUAL\n\t| XOREQUAL\n\t| OREQUAL\n\texpression : assignment_expression\n\t| expression COMMA assignment_expression\n  constant_expression : conditional_expressiondeclaration : declaration_specifiers SEMICOLON\n\t| declaration_specifiers init_declarator_list SEMICOLON\n  declaration_specifiers : storage_class_specifier\n\t| storage_class_specifier declaration_specifiers\n\t| type_specifier\n\t| type_specifier declaration_specifiers\n\t| type_qualifier\n\t| type_qualifier declaration_specifiers\n  init_declarator_list : init_declarator\n\t| init_declarator_list COMMA init_declarator\n  init_declarator : declarator\n\t| declarator EQUALS initializer\n  storage_class_specifier : TYPEDEF\n\t| EXTERN\n\t| STATIC\n\t| AUTO\n\t| REGISTER\n  type_specifier : VOID\n                    | CHAR\n                    | SHORT\n                    | INT\n                    | LONG\n                    | FLOAT\n                    | DOUBLE\n                    | SIGNED\n                    | UNSIGNED\n                    | struct_or_union_specifier\n                    | enum_specifier\n                    | TYPE_NAME\n  struct_or_union_specifier : struct_or_union ID LCURLYBRACKET struct_declaration_list RCURLYBRACKET\n  | struct_or_union LCURLYBRACKET struct_declaration_list RCURLYBRACKET\n  | struct_or_union ID\n  struct_or_union : STRUCT\n\t| UNION\n  struct_declaration_list : struct_declaration\n\t| struct_declaration_list struct_declaration\n  struct_declaration : specifier_qualifier_list struct_declarator_list SEMICOLON\n  specifier_qualifier_list : type_specifier specifier_qualifier_list\n  | type_specifier\n  | type_qualifier specifier_qualifier_list\n  | type_qualifier\n  struct_declarator_list : struct_declarator\n\t| struct_declarator_list COMMA struct_declarator\n  struct_declarator : declarator\n\t| COLON constant_expression\n\t| declarator COLON constant_expression\n  enum_specifier : ENUM LCURLYBRACKET enumerator_list RCURLYBRACKET\n\t| ENUM ID LCURLYBRACKET enumerator_list RCURLYBRACKET\n\t| ENUM ID\n  enumerator_list : enumerator\n\t| enumerator_list COMMA enumerator\n  enumerator : ID\n\t| ID EQUALS constant_expression\n\ttype_qualifier : CONST\n                      | VOLATILE\n    declarator : pointer direct_declarator\n  | direct_declarator\n  direct_declarator : ID\n                        | LPAREN declarator RPAREN\n                        | direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET\n                        | direct_declarator LSQUAREBRACKET RSQUAREBRACKET\n                        | direct_declarator LPAREN parameter_type_list RPAREN\n                        | direct_declarator LPAREN identifier_list RPAREN\n                        | direct_declarator LPAREN RPAREN\n  pointer : MULTIPLY \n              | MULTIPLY type_qualifier_list\n              | MULTIPLY pointer\n              | MULTIPLY type_qualifier_list pointer\n  type_qualifier_list : type_qualifier\n                        | type_qualifier_list type_qualifier\n  parameter_type_list : parameter_list\n                          | parameter_list COMMA ELLIPSIS\n  parameter_list : parameter_declaration\n                      | parameter_list COMMA parameter_declaration\n    parameter_declaration : declaration_specifiers declarator\n                             | declaration_specifiers abstract_declarator\n                             | declaration_specifiers\n    identifier_list : ID\n                       | identifier_list COMMA ID\n    type_name : specifier_qualifier_list\n                 | specifier_qualifier_list abstract_declarator\n    abstract_declarator : pointer \n                           | direct_abstract_declarator\n                           | pointer direct_abstract_declarator\n    direct_abstract_declarator : LPAREN abstract_declarator RPAREN\n                                  | LSQUAREBRACKET RSQUAREBRACKET\n                                  | LSQUAREBRACKET constant_expression RSQUAREBRACKET\n                                  | direct_abstract_declarator LPAREN RPAREN\n                                  | direct_abstract_declarator LPAREN constant_expression RPAREN \n                                  | LPAREN RPAREN\n                                  | LPAREN parameter_type_list RPAREN\n                                  | direct_abstract_declarator LPAREN parameter_type_list RPAREN\n    initializer : assignment_expression\n                   | LCURLYBRACKET initializer_list RCURLYBRACKET\n                   | LCURLYBRACKET initializer_list COMMA RCURLYBRACKET                                   \n    initializer_list : initializer\n  | initializer_list COMMA initializer\n  statement : labeled_statement\n                 | compound_statement\n                 | expression_statement\n                 | selection_statement\n                 | iteration_statement\n                 | jump_statement\n    labeled_statement : ID COLON statement \n                         | CASE constant_expression COLON statement\n                         | DEFAULT COLON statement\n    compound_statement : LCURLYBRACKET RCURLYBRACKET\n                          | LCURLYBRACKET statement_list RCURLYBRACKET\n                          | LCURLYBRACKET declaration_list RCURLYBRACKET\n                          | LCURLYBRACKET declaration_list statement_list RCURLYBRACKET\n    declaration_list : declaration\n                        | declaration_list declaration\n    statement_list : statement\n                      | statement_list statement\n    expression_statement : SEMICOLON\n                            | expression SEMICOLON\n    selection_statement : IF LPAREN expression RPAREN statement\n                           | IF LPAREN expression RPAREN statement ELSE statement\n                           | SWITCH LPAREN expression RPAREN statement\n    iteration_statement : WHILE LPAREN expression RPAREN\n                           | DO statement WHILE LPAREN expression RPAREN SEMICOLON\n                           | FOR LPAREN expression_statement expression_statement RPAREN statement\n                           | FOR LPAREN expression_statement expression_statement expression RPAREN statement                                                 \n    jump_statement : GOTO ID SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | BREAK SEMICOLON\n                      | RETURN SEMICOLON\n                      | RETURN expression SEMICOLON\n    translation_unit : external_declaration\n                        | translation_unit external_declaration\n    external_declaration : function_definition\n                            | declaration\n    function_definition : declaration_specifiers declarator declaration_list compound_statement\n                           | declaration_specifiers declarator compound_statement\n                           | declarator declaration_list compound_statement\n                           | declarator compound_statement                                                                              \n    '
    
_lr_action_items = {'TYPEDEF':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,129,135,143,154,159,161,224,225,226,228,233,236,244,250,260,298,304,311,],[12,12,-208,-210,-211,12,12,12,12,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,12,-80,12,-215,-190,12,-135,12,-111,-128,12,-213,-81,-214,-191,-186,12,-140,-143,-138,-212,-187,-188,-139,-141,-142,12,12,-110,-126,-189,12,12,-109,-127,]),'EXTERN':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,129,135,143,154,159,161,224,225,226,228,233,236,244,250,260,298,304,311,],[13,13,-208,-210,-211,13,13,13,13,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,13,-80,13,-215,-190,13,-135,13,-111,-128,13,-213,-81,-214,-191,-186,13,-140,-143,-138,-212,-187,-188,-139,-141,-142,13,13,-110,-126,-189,13,13,-109,-127,]),'STATIC':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,129,135,143,154,159,161,224,225,226,228,233,236,244,250,260,298,304,311,],[14,14,-208,-210,-211,14,14,14,14,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,14,-80,14,-215,-190,14,-135,14,-111,-128,14,-213,-81,-214,-191,-186,14,-140,-143,-138,-212,-187,-188,-139,-141,-142,14,14,-110,-126,-189,14,14,-109,-127,]),'AUTO':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,129,135,143,154,159,161,224,225,226,228,233,236,244,250,260,298,304,311,],[15,15,-208,-210,-211,15,15,15,15,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,15,-80,15,-215,-190,15,-135,15,-111,-128,15,-213,-81,-214,-191,-186,15,-140,-143,-138,-212,-187,-188,-139,-141,-142,15,15,-110,-126,-189,15,15,-109,-127,]),'REGISTER':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,129,135,143,154,159,161,224,225,226,228,233,236,244,250,260,298,304,311,],[16,16,-208,-210,-211,16,16,16,16,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,16,-80,16,-215,-190,16,-135,16,-111,-128,16,-213,-81,-214,-191,-186,16,-140,-143,-138,-212,-187,-188,-139,-141,-142,16,16,-110,-126,-189,16,16,-109,-127,]),'VOID':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[17,17,-208,-210,-211,17,17,17,17,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,17,-80,17,-215,-190,17,-135,17,-111,17,-128,17,-213,-81,-214,-191,-186,17,17,-140,17,-143,-138,17,17,-114,17,17,-212,-187,-188,17,-139,-141,-142,17,17,17,-110,-115,-126,-189,17,17,-109,-116,-127,]),'CHAR':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[18,18,-208,-210,-211,18,18,18,18,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,18,-80,18,-215,-190,18,-135,18,-111,18,-128,18,-213,-81,-214,-191,-186,18,18,-140,18,-143,-138,18,18,-114,18,18,-212,-187,-188,18,-139,-141,-142,18,18,18,-110,-115,-126,-189,18,18,-109,-116,-127,]),'SHORT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[19,19,-208,-210,-211,19,19,19,19,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,19,-80,19,-215,-190,19,-135,19,-111,19,-128,19,-213,-81,-214,-191,-186,19,19,-140,19,-143,-138,19,19,-114,19,19,-212,-187,-188,19,-139,-141,-142,19,19,19,-110,-115,-126,-189,19,19,-109,-116,-127,]),'INT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[20,20,-208,-210,-211,20,20,20,20,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,20,-80,20,-215,-190,20,-135,20,-111,20,-128,20,-213,-81,-214,-191,-186,20,20,-140,20,-143,-138,20,20,-114,20,20,-212,-187,-188,20,-139,-141,-142,20,20,20,-110,-115,-126,-189,20,20,-109,-116,-127,]),'LONG':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[21,21,-208,-210,-211,21,21,21,21,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,21,-80,21,-215,-190,21,-135,21,-111,21,-128,21,-213,-81,-214,-191,-186,21,21,-140,21,-143,-138,21,21,-114,21,21,-212,-187,-188,21,-139,-141,-142,21,21,21,-110,-115,-126,-189,21,21,-109,-116,-127,]),'FLOAT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[22,22,-208,-210,-211,22,22,22,22,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,22,-80,22,-215,-190,22,-135,22,-111,22,-128,22,-213,-81,-214,-191,-186,22,22,-140,22,-143,-138,22,22,-114,22,22,-212,-187,-188,22,-139,-141,-142,22,22,22,-110,-115,-126,-189,22,22,-109,-116,-127,]),'DOUBLE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[23,23,-208,-210,-211,23,23,23,23,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,23,-80,23,-215,-190,23,-135,23,-111,23,-128,23,-213,-81,-214,-191,-186,23,23,-140,23,-143,-138,23,23,-114,23,23,-212,-187,-188,23,-139,-141,-142,23,23,23,-110,-115,-126,-189,23,23,-109,-116,-127,]),'SIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[24,24,-208,-210,-211,24,24,24,24,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,24,-80,24,-215,-190,24,-135,24,-111,24,-128,24,-213,-81,-214,-191,-186,24,24,-140,24,-143,-138,24,24,-114,24,24,-212,-187,-188,24,-139,-141,-142,24,24,24,-110,-115,-126,-189,24,24,-109,-116,-127,]),'UNSIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[25,25,-208,-210,-211,25,25,25,25,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,25,-80,25,-215,-190,25,-135,25,-111,25,-128,25,-213,-81,-214,-191,-186,25,25,-140,25,-143,-138,25,25,-114,25,25,-212,-187,-188,25,-139,-141,-142,25,25,25,-110,-115,-126,-189,25,25,-109,-116,-127,]),'TYPE_NAME':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[28,28,-208,-210,-211,28,28,28,28,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,28,-80,28,-215,-190,28,-135,28,-111,28,-128,28,-213,-81,-214,-191,-186,28,28,-140,28,-143,-138,28,28,-114,28,28,-212,-187,-188,28,-139,-141,-142,28,28,28,-110,-115,-126,-189,28,28,-109,-116,-127,]),'CONST':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,43,44,45,46,51,53,54,56,58,59,61,62,63,65,67,68,69,71,85,129,132,135,142,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[29,29,-208,-210,-211,29,29,29,29,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,29,-137,-209,29,-80,29,-215,-190,29,-135,29,29,-148,-111,29,-128,29,-213,-81,-214,-191,-186,29,29,-140,29,-143,-149,-138,29,29,-114,29,29,-212,-187,-188,29,-139,-141,-142,29,29,29,-110,-115,-126,-189,29,29,-109,-116,-127,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,43,44,45,46,51,53,54,56,58,59,61,62,63,65,67,68,69,71,85,129,132,135,142,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[30,30,-208,-210,-211,30,30,30,30,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,30,-137,-209,30,-80,30,-215,-190,30,-135,30,30,-148,-111,30,-128,30,-213,-81,-214,-191,-186,30,30,-140,30,-143,-149,-138,30,30,-114,30,30,-212,-187,-188,30,-139,-141,-142,30,30,30,-110,-115,-126,-189,30,30,-109,-116,-127,]),'MULTIPLY':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,38,40,44,45,46,47,48,49,50,52,54,56,58,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,126,131,132,133,140,142,147,148,149,154,157,159,160,161,162,163,165,166,167,168,171,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,233,234,236,241,242,243,244,246,250,251,252,253,256,257,260,264,265,266,271,274,275,289,290,291,292,293,298,304,306,307,311,313,314,315,316,317,318,319,320,321,322,323,324,325,336,337,339,345,347,348,349,350,351,],[31,31,-208,-210,-211,31,-82,-84,-86,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,31,31,-209,-80,-215,-190,107,31,-83,-85,-87,107,31,-148,-111,-128,-213,107,-81,31,-214,-191,-186,107,107,-192,-177,-178,-179,-180,-181,-182,-194,-1,107,107,107,107,-32,-20,107,107,107,-34,107,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,221,-32,107,-1,31,-149,31,-118,-120,-212,107,-187,-193,-188,107,107,107,-195,107,107,31,107,107,107,-204,-205,-206,107,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,107,107,107,107,-16,-17,-21,107,-22,-23,-24,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,31,107,-110,107,-117,-119,-126,107,-189,-183,107,-185,-9,107,31,107,-203,-207,-12,-14,-15,221,221,-35,-36,-37,107,-109,31,107,-127,107,-184,107,-33,107,-199,107,107,107,-11,-13,107,-25,-196,-198,107,107,-201,107,-197,-200,-202,]),'ID':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,40,44,45,46,47,48,49,50,52,53,54,55,56,58,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,90,93,99,100,101,103,106,107,108,109,110,111,132,140,141,142,147,148,149,153,154,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,227,231,233,234,236,241,242,243,244,245,246,250,251,252,253,257,264,265,266,298,304,306,307,311,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[32,32,-208,-210,-211,32,-82,-84,-86,32,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,32,58,61,-112,-113,-209,-80,-215,-190,80,32,-83,-85,-87,133,138,-145,-146,-148,-111,152,-128,-213,133,-81,32,-214,-191,-186,80,80,-192,-177,-178,-179,-180,-181,-182,-194,133,133,80,176,133,133,133,133,133,-26,-27,-28,-29,-30,-31,133,32,-147,-149,32,-118,-120,152,-212,133,-187,-193,-188,80,80,80,-195,133,133,133,133,133,-204,-205,-206,133,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,133,133,133,133,274,275,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,294,32,32,133,-110,133,-117,-119,-126,152,133,-189,-183,80,-185,133,133,-203,-207,133,-109,32,133,-127,133,-184,80,80,-199,133,133,133,133,-196,-198,80,80,-201,80,-197,-200,-202,]),'LPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,40,44,45,46,47,48,49,50,51,52,54,55,56,58,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,93,98,99,100,101,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,129,132,133,135,140,141,142,143,147,148,149,154,157,159,160,161,162,163,165,166,167,168,171,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,231,232,233,234,236,241,242,243,244,246,250,251,252,253,256,257,259,260,263,264,265,266,271,274,275,297,298,299,302,304,306,307,311,313,314,315,317,318,319,320,321,322,323,324,326,329,330,331,336,337,339,343,344,345,347,348,349,350,351,],[33,33,-208,-210,-211,33,-82,-84,-86,33,53,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,33,-209,-80,-215,-190,85,33,-83,-85,-87,53,132,-145,-146,-148,-111,-128,-213,85,-81,33,-214,-191,-186,85,85,-192,-177,-178,-179,-180,-181,-182,-194,-1,132,168,85,172,173,85,175,85,196,202,202,132,206,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,-140,85,-1,-143,233,-147,-149,-138,33,-118,-120,-212,85,-187,-193,-188,85,85,85,-195,85,85,260,85,85,85,-204,-205,-206,85,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,85,132,85,85,-16,-17,85,85,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-139,-141,-142,233,298,233,132,-110,132,-117,-119,-126,132,-189,-183,85,-185,-9,132,260,260,319,85,-203,-207,-12,-14,-15,298,132,-169,-165,-109,33,132,-127,85,-184,85,85,-199,85,85,132,-11,-13,85,-167,-164,-170,-166,-196,-198,85,-168,-171,85,-201,85,-197,-200,-202,]),'ENUM':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[35,35,-208,-210,-211,35,35,35,35,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,35,-80,35,-215,-190,35,-135,35,-111,35,-128,35,-213,-81,-214,-191,-186,35,35,-140,35,-143,-138,35,35,-114,35,35,-212,-187,-188,35,-139,-141,-142,35,35,35,-110,-115,-126,-189,35,35,-109,-116,-127,]),'STRUCT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[36,36,-208,-210,-211,36,36,36,36,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,36,-80,36,-215,-190,36,-135,36,-111,36,-128,36,-213,-81,-214,-191,-186,36,36,-140,36,-143,-138,36,36,-114,36,36,-212,-187,-188,36,-139,-141,-142,36,36,36,-110,-115,-126,-189,36,36,-109,-116,-127,]),'UNION':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,129,132,135,143,144,145,146,148,149,154,159,161,206,224,225,226,228,233,235,236,237,244,250,260,298,304,305,311,],[37,37,-208,-210,-211,37,37,37,37,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-209,37,-80,37,-215,-190,37,-135,37,-111,37,-128,37,-213,-81,-214,-191,-186,37,37,-140,37,-143,-138,37,37,-114,37,37,-212,-187,-188,37,-139,-141,-142,37,37,37,-110,-115,-126,-189,37,37,-109,-116,-127,]),'$end':([1,2,3,4,38,40,44,63,65,67,69,154,159,161,250,],[0,-208,-210,-211,-209,-80,-215,-213,-81,-214,-186,-212,-187,-188,-189,]),'SEMICOLON':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,42,45,46,47,48,49,50,51,58,61,65,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,92,93,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,133,135,143,155,156,158,159,160,161,162,163,165,166,175,176,177,178,179,180,199,200,201,203,204,205,224,225,226,236,238,239,240,244,250,251,252,253,254,256,264,265,266,267,269,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,304,308,311,312,314,315,316,317,318,322,323,325,332,333,334,336,337,339,341,345,346,347,348,349,350,351,],[40,-82,-84,-86,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-90,-80,65,-88,-190,79,40,-83,-85,-87,-135,-111,-128,-81,-191,-186,79,79,-192,-177,-178,-179,-180,-181,-182,-194,-1,166,79,177,178,179,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-90,-140,-79,-32,-1,-143,-138,-91,-172,-89,-187,-193,-188,79,79,79,-195,79,265,-204,-205,-206,266,-16,-17,-21,-22,-23,-24,-139,-141,-142,-110,305,-121,-123,-126,-189,-183,79,-185,-78,-9,79,-203,-207,-65,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-109,-124,-127,-173,-184,79,-33,79,-199,-11,-13,-25,-122,-125,-174,-196,-198,79,-63,79,350,-201,79,-197,-200,-202,]),'LCURLYBRACKET':([6,11,32,34,35,36,37,39,40,43,45,46,51,58,61,62,64,65,68,69,70,71,72,73,74,75,76,77,78,79,88,129,135,143,157,159,160,161,162,163,165,166,177,178,179,224,225,226,250,251,252,253,265,266,313,314,315,317,318,336,337,339,345,347,348,349,350,351,],[46,-136,-137,59,60,-112,-113,46,-80,46,-190,46,-135,144,153,46,157,-81,-191,-186,46,46,-192,-177,-178,-179,-180,-181,-182,-194,46,-140,-143,-138,157,-187,-193,-188,46,46,46,-195,-204,-205,-206,-139,-141,-142,-189,-183,46,-185,-203,-207,157,-184,46,46,-199,-196,-198,46,46,-201,46,-197,-200,-202,]),'LSQUAREBRACKET':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,48,49,50,51,54,55,56,58,61,80,98,105,113,114,115,116,117,118,119,129,133,135,140,141,142,143,148,149,171,199,200,224,225,226,231,233,236,242,243,244,256,259,260,271,274,275,304,311,322,323,],[-82,-84,-86,52,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-83,-85,-87,52,-145,-146,-148,-111,-128,-1,195,-10,-2,-3,-4,-5,-6,-7,-8,-140,-1,-143,234,-147,-149,-138,-118,-120,234,-16,-17,-139,-141,-142,234,234,-110,-117,-119,-126,-9,234,234,-12,-14,-15,-109,-127,-11,-13,]),'COMMA':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,41,42,48,49,50,51,54,55,56,58,61,80,83,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,133,135,136,137,138,139,140,141,142,143,150,151,152,155,156,158,169,180,199,200,201,203,204,205,224,225,226,229,230,231,232,236,238,239,240,244,247,248,249,254,255,256,261,262,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,302,304,308,309,310,311,312,316,322,323,325,326,329,330,331,332,333,334,335,338,340,341,342,343,344,],[-82,-84,-86,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-90,66,-88,-83,-85,-87,-135,-145,-146,-148,-111,-128,-1,167,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-90,-140,-79,-32,-1,-143,227,228,-157,-152,-156,-147,-149,-138,245,-129,-131,-91,-172,-89,167,167,-16,-17,-21,-22,-23,-24,-139,-141,-142,-154,-155,-161,-162,-110,306,-121,-123,-126,245,313,-175,-78,167,-9,167,167,-65,167,-61,167,-12,324,-18,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-158,-153,-163,-169,-165,-109,-124,-130,-132,-127,-173,-33,-11,-13,-25,-167,-164,-170,-166,-122,-125,-174,-176,167,167,-63,-19,-168,-171,]),'RPAREN':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,48,49,50,51,53,54,55,56,57,58,61,79,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131,133,134,135,136,137,138,139,140,141,142,143,148,149,166,169,170,171,196,199,200,201,203,204,205,224,225,226,229,230,231,232,233,236,242,243,244,254,255,256,258,259,260,261,262,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,311,316,320,322,323,325,326,327,328,329,330,331,338,340,341,342,343,344,],[-82,-84,-86,-136,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-144,-137,-83,-85,-87,-135,135,-145,-146,-148,143,-111,-128,-194,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-140,-79,-32,-1,225,-143,226,-150,-157,-152,-156,-147,-149,-138,-118,-120,-195,256,257,-159,271,-16,-17,-21,-22,-23,-24,-139,-141,-142,-154,-155,-161,-162,299,-110,-117,-119,-126,-78,315,-9,-160,-161,299,317,318,-65,-61,-12,323,-18,-14,-15,325,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-158,-151,-153,-163,326,-169,329,330,-165,-109,-127,-33,339,-11,-13,-25,-167,343,344,-164,-170,-166,346,348,-63,-19,-168,-171,]),'EQUALS':([11,32,39,51,80,96,98,105,113,114,115,116,117,118,119,127,129,131,133,135,143,152,199,200,201,203,204,205,224,225,226,256,271,274,275,316,322,323,325,],[-136,-137,64,-135,-1,182,-20,-10,-2,-3,-4,-5,-6,-7,-8,64,-140,-32,-1,-143,-138,246,-16,-17,-21,-22,-23,-24,-139,-141,-142,-9,-12,-14,-15,-33,-11,-13,-25,]),'COLON':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,51,58,61,80,82,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131,133,135,143,147,148,149,164,199,200,201,203,204,205,224,225,226,236,240,242,243,244,254,256,267,268,269,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,304,306,311,316,322,323,325,341,],[-136,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-133,-134,-137,-135,-111,-128,163,165,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-140,-79,-32,-1,-143,-138,241,-118,-120,252,-16,-17,-21,-22,-23,-24,-139,-141,-142,-110,307,-117,-119,-126,-78,-9,-65,321,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-109,241,-127,-33,-11,-13,-25,-63,]),'RCURLYBRACKET':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,131,133,145,146,150,151,152,156,159,160,161,162,166,177,178,179,199,200,201,203,204,205,235,237,247,248,249,250,251,253,256,265,266,267,269,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,305,309,310,312,313,314,316,318,322,323,325,334,335,336,337,341,347,349,350,351,],[-80,-190,69,-81,-191,-186,159,161,-192,-177,-178,-179,-180,-181,-182,-194,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-79,-32,-1,236,-114,244,-129,-131,-172,-187,-193,-188,250,-195,-204,-205,-206,-16,-17,-21,-22,-23,-24,304,-115,311,312,-175,-189,-183,-185,-9,-203,-207,-65,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-116,-130,-132,-173,334,-184,-33,-199,-11,-13,-25,-174,-176,-196,-198,-63,-201,-197,-200,-202,]),'CASE':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,81,-81,-191,-186,81,81,-192,-177,-178,-179,-180,-181,-182,-194,81,-187,-193,-188,81,81,81,-195,-204,-205,-206,-189,-183,81,-185,-203,-207,-184,81,81,-199,-196,-198,81,81,-201,81,-197,-200,-202,]),'DEFAULT':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,82,-81,-191,-186,82,82,-192,-177,-178,-179,-180,-181,-182,-194,82,-187,-193,-188,82,82,82,-195,-204,-205,-206,-189,-183,82,-185,-203,-207,-184,82,82,-199,-196,-198,82,82,-201,82,-197,-200,-202,]),'IF':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,84,-81,-191,-186,84,84,-192,-177,-178,-179,-180,-181,-182,-194,84,-187,-193,-188,84,84,84,-195,-204,-205,-206,-189,-183,84,-185,-203,-207,-184,84,84,-199,-196,-198,84,84,-201,84,-197,-200,-202,]),'SWITCH':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,86,-81,-191,-186,86,86,-192,-177,-178,-179,-180,-181,-182,-194,86,-187,-193,-188,86,86,86,-195,-204,-205,-206,-189,-183,86,-185,-203,-207,-184,86,86,-199,-196,-198,86,86,-201,86,-197,-200,-202,]),'WHILE':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,174,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,87,-81,-191,-186,87,87,-192,-177,-178,-179,-180,-181,-182,-194,87,-187,-193,-188,87,87,87,-195,263,-204,-205,-206,-189,-183,87,-185,-203,-207,-184,87,87,-199,-196,-198,87,87,-201,87,-197,-200,-202,]),'DO':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,88,-81,-191,-186,88,88,-192,-177,-178,-179,-180,-181,-182,-194,88,-187,-193,-188,88,88,88,-195,-204,-205,-206,-189,-183,88,-185,-203,-207,-184,88,88,-199,-196,-198,88,88,-201,88,-197,-200,-202,]),'FOR':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,89,-81,-191,-186,89,89,-192,-177,-178,-179,-180,-181,-182,-194,89,-187,-193,-188,89,89,89,-195,-204,-205,-206,-189,-183,89,-185,-203,-207,-184,89,89,-199,-196,-198,89,89,-201,89,-197,-200,-202,]),'GOTO':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,90,-81,-191,-186,90,90,-192,-177,-178,-179,-180,-181,-182,-194,90,-187,-193,-188,90,90,90,-195,-204,-205,-206,-189,-183,90,-185,-203,-207,-184,90,90,-199,-196,-198,90,90,-201,90,-197,-200,-202,]),'CONTINUE':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,91,-81,-191,-186,91,91,-192,-177,-178,-179,-180,-181,-182,-194,91,-187,-193,-188,91,91,91,-195,-204,-205,-206,-189,-183,91,-185,-203,-207,-184,91,91,-199,-196,-198,91,91,-201,91,-197,-200,-202,]),'BREAK':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,92,-81,-191,-186,92,92,-192,-177,-178,-179,-180,-181,-182,-194,92,-187,-193,-188,92,92,92,-195,-204,-205,-206,-189,-183,92,-185,-203,-207,-184,92,92,-199,-196,-198,92,92,-201,92,-197,-200,-202,]),'RETURN':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,159,160,161,162,163,165,166,177,178,179,250,251,252,253,265,266,314,315,317,318,336,337,339,345,347,348,349,350,351,],[-80,-190,93,-81,-191,-186,93,93,-192,-177,-178,-179,-180,-181,-182,-194,93,-187,-193,-188,93,93,93,-195,-204,-205,-206,-189,-183,93,-185,-203,-207,-184,93,93,-199,-196,-198,93,93,-201,93,-197,-200,-202,]),'INCREMENT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,98,99,100,101,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,132,133,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,256,257,264,265,266,271,274,275,298,307,313,314,315,317,318,319,320,321,322,323,324,336,337,339,345,347,348,349,350,351,],[-80,-190,99,99,99,-81,-191,-186,99,99,-192,-177,-178,-179,-180,-181,-182,-194,-1,99,99,99,99,199,99,99,99,99,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,99,-1,99,-187,-193,-188,99,99,99,-195,99,99,99,99,99,-204,-205,-206,99,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,99,99,99,99,-16,-17,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-189,-183,99,-185,-9,99,99,-203,-207,-12,-14,-15,99,99,99,-184,99,99,-199,99,99,99,-11,-13,99,-196,-198,99,99,-201,99,-197,-200,-202,]),'DECREMENT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,98,99,100,101,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,132,133,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,256,257,264,265,266,271,274,275,298,307,313,314,315,317,318,319,320,321,322,323,324,336,337,339,345,347,348,349,350,351,],[-80,-190,100,100,100,-81,-191,-186,100,100,-192,-177,-178,-179,-180,-181,-182,-194,-1,100,100,100,100,200,100,100,100,100,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,100,-1,100,-187,-193,-188,100,100,100,-195,100,100,100,100,100,-204,-205,-206,100,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,100,100,100,100,-16,-17,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-189,-183,100,-185,-9,100,100,-203,-207,-12,-14,-15,100,100,100,-184,100,100,-199,100,100,100,-11,-13,100,-196,-198,100,100,-201,100,-197,-200,-202,]),'SIZEOF':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,103,103,103,-81,-191,-186,103,103,-192,-177,-178,-179,-180,-181,-182,-194,103,103,103,103,103,103,103,103,-26,-27,-28,-29,-30,-31,103,103,-187,-193,-188,103,103,103,-195,103,103,103,103,103,-204,-205,-206,103,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-189,-183,103,-185,103,103,-203,-207,103,103,103,-184,103,103,-199,103,103,103,103,-196,-198,103,103,-201,103,-197,-200,-202,]),'AND':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,121,122,123,124,125,126,131,132,133,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,256,257,264,265,266,271,274,275,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,298,307,313,314,315,316,317,318,319,320,321,322,323,324,325,336,337,339,345,347,348,349,350,351,],[-80,-190,106,106,106,-81,-191,-186,106,106,-192,-177,-178,-179,-180,-181,-182,-194,-1,106,106,106,106,-32,-20,106,106,106,-34,106,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,210,-52,-49,-44,-41,-38,-32,106,-1,106,-187,-193,-188,106,106,106,-195,106,106,106,106,106,-204,-205,-206,106,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,106,106,106,106,-16,-17,-21,106,-22,-23,-24,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-189,-183,106,-185,-9,106,106,-203,-207,-12,-14,-15,210,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,106,106,106,-184,106,-33,106,-199,106,106,106,-11,-13,106,-25,-196,-198,106,106,-201,106,-197,-200,-202,]),'PLUS':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,125,126,131,132,133,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,256,257,264,265,266,271,274,275,287,288,289,290,291,292,293,298,307,313,314,315,316,317,318,319,320,321,322,323,324,325,336,337,339,345,347,348,349,350,351,],[-80,-190,108,108,108,-81,-191,-186,108,108,-192,-177,-178,-179,-180,-181,-182,-194,-1,108,108,108,108,-32,-20,108,108,108,-34,108,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,219,-38,-32,108,-1,108,-187,-193,-188,108,108,108,-195,108,108,108,108,108,-204,-205,-206,108,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,108,108,108,108,-16,-17,-21,108,-22,-23,-24,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-189,-183,108,-185,-9,108,108,-203,-207,-12,-14,-15,219,219,-39,-40,-35,-36,-37,108,108,108,-184,108,-33,108,-199,108,108,108,-11,-13,108,-25,-196,-198,108,108,-201,108,-197,-200,-202,]),'MINUS':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,115,116,117,118,119,125,126,131,132,133,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,256,257,264,265,266,271,274,275,287,288,289,290,291,292,293,298,307,313,314,315,316,317,318,319,320,321,322,323,324,325,336,337,339,345,347,348,349,350,351,],[-80,-190,109,109,109,-81,-191,-186,109,109,-192,-177,-178,-179,-180,-181,-182,-194,-1,109,109,109,109,-32,-20,109,109,109,-34,109,-10,-26,-27,-28,-29,-30,-31,-2,-3,-4,-5,-6,-7,-8,220,-38,-32,109,-1,109,-187,-193,-188,109,109,109,-195,109,109,109,109,109,-204,-205,-206,109,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,109,109,109,109,-16,-17,-21,109,-22,-23,-24,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-189,-183,109,-185,-9,109,109,-203,-207,-12,-14,-15,220,220,-39,-40,-35,-36,-37,109,109,109,-184,109,-33,109,-199,109,109,109,-11,-13,109,-25,-196,-198,109,109,-201,109,-197,-200,-202,]),'NOT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,110,110,110,-81,-191,-186,110,110,-192,-177,-178,-179,-180,-181,-182,-194,110,110,110,110,110,110,110,110,-26,-27,-28,-29,-30,-31,110,110,-187,-193,-188,110,110,110,-195,110,110,110,110,110,-204,-205,-206,110,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-189,-183,110,-185,110,110,-203,-207,110,110,110,-184,110,110,-199,110,110,110,110,-196,-198,110,110,-201,110,-197,-200,-202,]),'LNOT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,111,111,111,-81,-191,-186,111,111,-192,-177,-178,-179,-180,-181,-182,-194,111,111,111,111,111,111,111,111,-26,-27,-28,-29,-30,-31,111,111,-187,-193,-188,111,111,111,-195,111,111,111,111,111,-204,-205,-206,111,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-189,-183,111,-185,111,111,-203,-207,111,111,111,-184,111,111,-199,111,111,111,111,-196,-198,111,111,-201,111,-197,-200,-202,]),'CHAR_CONST':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,113,113,113,-81,-191,-186,113,113,-192,-177,-178,-179,-180,-181,-182,-194,113,113,113,113,113,113,113,113,-26,-27,-28,-29,-30,-31,113,113,-187,-193,-188,113,113,113,-195,113,113,113,113,113,-204,-205,-206,113,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-189,-183,113,-185,113,113,-203,-207,113,113,113,-184,113,113,-199,113,113,113,113,-196,-198,113,113,-201,113,-197,-200,-202,]),'INT_CONST':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,114,114,114,-81,-191,-186,114,114,-192,-177,-178,-179,-180,-181,-182,-194,114,114,114,114,114,114,114,114,-26,-27,-28,-29,-30,-31,114,114,-187,-193,-188,114,114,114,-195,114,114,114,114,114,-204,-205,-206,114,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-189,-183,114,-185,114,114,-203,-207,114,114,114,-184,114,114,-199,114,114,114,114,-196,-198,114,114,-201,114,-197,-200,-202,]),'FLOAT_CONST':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,115,115,115,-81,-191,-186,115,115,-192,-177,-178,-179,-180,-181,-182,-194,115,115,115,115,115,115,115,115,-26,-27,-28,-29,-30,-31,115,115,-187,-193,-188,115,115,115,-195,115,115,115,115,115,-204,-205,-206,115,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-189,-183,115,-185,115,115,-203,-207,115,115,115,-184,115,115,-199,115,115,115,115,-196,-198,115,115,-201,115,-197,-200,-202,]),'OCTAL_CONST':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,116,116,116,-81,-191,-186,116,116,-192,-177,-178,-179,-180,-181,-182,-194,116,116,116,116,116,116,116,116,-26,-27,-28,-29,-30,-31,116,116,-187,-193,-188,116,116,116,-195,116,116,116,116,116,-204,-205,-206,116,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-189,-183,116,-185,116,116,-203,-207,116,116,116,-184,116,116,-199,116,116,116,116,-196,-198,116,116,-201,116,-197,-200,-202,]),'HEX_CONST':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,117,117,117,-81,-191,-186,117,117,-192,-177,-178,-179,-180,-181,-182,-194,117,117,117,117,117,117,117,117,-26,-27,-28,-29,-30,-31,117,117,-187,-193,-188,117,117,117,-195,117,117,117,117,117,-204,-205,-206,117,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-189,-183,117,-185,117,117,-203,-207,117,117,117,-184,117,117,-199,117,117,117,117,-196,-198,117,117,-201,117,-197,-200,-202,]),'BIN_CONST':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,118,118,118,-81,-191,-186,118,118,-192,-177,-178,-179,-180,-181,-182,-194,118,118,118,118,118,118,118,118,-26,-27,-28,-29,-30,-31,118,118,-187,-193,-188,118,118,118,-195,118,118,118,118,118,-204,-205,-206,118,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-189,-183,118,-185,118,118,-203,-207,118,118,118,-184,118,118,-199,118,118,118,118,-196,-198,118,118,-201,118,-197,-200,-202,]),'STRING_LITERAL':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,132,157,159,160,161,162,163,165,166,167,168,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,250,251,252,253,257,264,265,266,298,307,313,314,315,317,318,319,320,321,324,336,337,339,345,347,348,349,350,351,],[-80,-190,119,119,119,-81,-191,-186,119,119,-192,-177,-178,-179,-180,-181,-182,-194,119,119,119,119,119,119,119,119,-26,-27,-28,-29,-30,-31,119,119,-187,-193,-188,119,119,119,-195,119,119,119,119,119,-204,-205,-206,119,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-189,-183,119,-185,119,119,-203,-207,119,119,119,-184,119,119,-199,119,119,119,119,-196,-198,119,119,-201,119,-197,-200,-202,]),'RSQUAREBRACKET':([52,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,130,131,133,199,200,201,203,204,205,234,254,256,267,269,270,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,303,316,322,323,325,341,],[129,-77,-64,-32,-62,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,224,-79,-32,-1,-16,-17,-21,-22,-23,-24,302,-78,-9,-65,-61,322,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,331,-33,-11,-13,-25,-63,]),'ELSE':([69,73,74,75,76,77,78,79,159,161,166,177,178,179,250,251,253,265,266,314,318,336,337,347,349,350,351,],[-186,-177,-178,-179,-180,-181,-182,-194,-187,-188,-195,-204,-205,-206,-189,-183,-185,-203,-207,-184,-199,345,-198,-201,-197,-200,-202,]),'PERIOD':([80,98,105,113,114,115,116,117,118,119,133,199,200,256,271,274,275,322,323,],[-1,197,-10,-2,-3,-4,-5,-6,-7,-8,-1,-16,-17,-9,-12,-14,-15,-11,-13,]),'ARROW':([80,98,105,113,114,115,116,117,118,119,133,199,200,256,271,274,275,322,323,],[-1,198,-10,-2,-3,-4,-5,-6,-7,-8,-1,-16,-17,-9,-12,-14,-15,-11,-13,]),'MULTIPLYEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,183,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'DIVIDEEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,184,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'MODEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,185,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'PLUSEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,186,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'MINUSEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,187,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'LSHIFTEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,188,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'RSHIFTEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,189,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'ANDEQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,190,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'XOREQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,191,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'OREQUAL':([80,96,98,105,113,114,115,116,117,118,119,131,133,199,200,201,203,204,205,256,271,274,275,316,322,323,325,],[-1,192,-20,-10,-2,-3,-4,-5,-6,-7,-8,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-33,-11,-13,-25,]),'DIVIDE':([80,96,98,102,105,113,114,115,116,117,118,119,126,131,133,199,200,201,203,204,205,256,271,274,275,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,222,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,222,222,-35,-36,-37,-33,-11,-13,-25,]),'MOD':([80,96,98,102,105,113,114,115,116,117,118,119,126,131,133,199,200,201,203,204,205,256,271,274,275,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,223,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,223,223,-35,-36,-37,-33,-11,-13,-25,]),'LSHIFT':([80,96,98,102,105,113,114,115,116,117,118,119,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,217,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,217,217,217,217,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'RSHIFT':([80,96,98,102,105,113,114,115,116,117,118,119,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,218,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,218,218,218,218,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LESS':([80,96,98,102,105,113,114,115,116,117,118,119,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,213,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,213,213,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'GREATER':([80,96,98,102,105,113,114,115,116,117,118,119,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,214,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,214,214,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LESSEQUAL':([80,96,98,102,105,113,114,115,116,117,118,119,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,215,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,215,215,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'GREATEREQUAL':([80,96,98,102,105,113,114,115,116,117,118,119,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,216,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,216,216,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'EQUAL':([80,96,98,102,105,113,114,115,116,117,118,119,122,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,280,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,211,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,211,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'NOTEQUAL':([80,96,98,102,105,113,114,115,116,117,118,119,122,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,280,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,212,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,212,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'XOR':([80,96,98,102,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,-2,-3,-4,-5,-6,-7,-8,209,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,209,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'OR':([80,96,98,102,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,133,199,200,201,203,204,205,256,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,-10,208,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,208,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LAND':([80,96,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,133,199,200,201,203,204,205,256,269,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,-20,-34,207,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,207,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'CONDOP':([80,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,133,199,200,201,203,204,205,256,269,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,193,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'LOR':([80,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,133,199,200,201,203,204,205,256,269,271,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,316,322,323,325,],[-1,-32,194,-20,-34,-60,-10,-58,-2,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-1,-16,-17,-21,-22,-23,-24,-9,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-33,-11,-13,-25,]),'ELLIPSIS':([228,],[295,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,38,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,6,39,43,46,62,71,],[4,4,45,45,68,45,68,68,]),'declaration_specifiers':([0,1,6,7,8,9,39,43,46,53,62,71,228,233,260,298,],[5,5,47,48,49,50,47,47,47,140,47,47,140,140,140,140,]),'declarator':([0,1,5,33,47,66,140,147,233,306,],[6,6,39,57,127,127,229,240,57,240,]),'storage_class_specifier':([0,1,6,7,8,9,39,43,46,53,62,71,228,233,260,298,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'type_specifier':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,132,144,145,148,149,206,228,233,235,260,298,],[8,8,8,8,8,8,8,8,8,8,148,8,8,148,148,148,148,148,148,148,8,8,148,8,8,]),'type_qualifier':([0,1,6,7,8,9,31,39,43,46,53,54,59,62,71,85,132,144,145,148,149,206,228,233,235,260,298,],[9,9,9,9,9,9,56,9,9,9,9,142,149,9,9,149,149,149,149,149,149,149,9,9,149,9,9,]),'pointer':([0,1,5,31,33,47,54,66,140,147,171,233,260,306,],[10,10,10,55,10,10,141,10,231,10,259,231,259,10,]),'direct_declarator':([0,1,5,10,33,47,66,140,147,231,233,306,],[11,11,11,51,11,11,11,11,11,51,11,11,]),'struct_or_union_specifier':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,132,144,145,148,149,206,228,233,235,260,298,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'enum_specifier':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,132,144,145,148,149,206,228,233,235,260,298,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'struct_or_union':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,132,144,145,148,149,206,228,233,235,260,298,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'init_declarator_list':([5,47,],[41,41,]),'init_declarator':([5,47,66,],[42,42,158,]),'declaration_list':([6,39,46,],[43,62,71,]),'compound_statement':([6,39,43,46,62,70,71,88,162,163,165,252,315,317,339,345,348,],[44,63,67,74,154,74,74,74,74,74,74,74,74,74,74,74,74,]),'type_qualifier_list':([31,],[54,]),'statement_list':([46,71,],[70,162,]),'statement':([46,70,71,88,162,163,165,252,315,317,339,345,348,],[72,160,72,174,160,251,253,314,336,337,347,349,351,]),'labeled_statement':([46,70,71,88,162,163,165,252,315,317,339,345,348,],[73,73,73,73,73,73,73,73,73,73,73,73,73,]),'expression_statement':([46,70,71,88,162,163,165,175,252,264,315,317,339,345,348,],[75,75,75,75,75,75,75,264,75,320,75,75,75,75,75,]),'selection_statement':([46,70,71,88,162,163,165,252,315,317,339,345,348,],[76,76,76,76,76,76,76,76,76,76,76,76,76,]),'iteration_statement':([46,70,71,88,162,163,165,252,315,317,339,345,348,],[77,77,77,77,77,77,77,77,77,77,77,77,77,]),'jump_statement':([46,70,71,88,162,163,165,252,315,317,339,345,348,],[78,78,78,78,78,78,78,78,78,78,78,78,78,]),'expression':([46,70,71,85,88,93,132,162,163,165,168,172,173,175,193,195,202,206,252,264,315,317,319,320,339,345,348,],[83,83,83,169,83,180,169,83,83,83,255,261,262,83,268,270,169,169,83,83,83,83,338,340,83,83,83,]),'assignment_expression':([46,64,70,71,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,195,196,202,206,252,264,313,315,317,319,320,324,339,345,348,],[94,156,94,94,94,94,94,94,156,94,94,94,254,94,94,94,94,267,94,94,273,94,94,94,94,156,94,94,94,94,342,94,94,94,]),'conditional_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,195,196,202,206,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[95,130,95,95,95,130,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,130,130,130,95,95,130,130,95,95,95,95,95,341,95,95,95,95,]),'unary_expression':([46,52,64,70,71,81,85,88,93,99,100,101,103,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,252,257,264,298,307,313,315,317,319,320,321,324,339,345,348,],[96,131,96,96,96,131,96,96,96,201,203,131,205,96,96,96,96,96,96,96,96,96,96,96,96,131,96,96,96,96,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,96,131,96,131,131,96,96,96,96,96,131,96,96,96,96,]),'logical_or_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,195,196,202,206,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'postfix_expression':([46,52,64,70,71,81,85,88,93,99,100,101,103,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,252,257,264,298,307,313,315,317,319,320,321,324,339,345,348,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'unary_operator':([46,52,64,70,71,81,85,88,93,99,100,101,103,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,252,257,264,298,307,313,315,317,319,320,321,324,339,345,348,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'cast_expression':([46,52,64,70,71,81,85,88,93,101,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,252,257,264,298,307,313,315,317,319,320,321,324,339,345,348,],[102,102,102,102,102,102,102,102,102,204,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,291,292,293,102,102,102,102,316,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'logical_and_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,269,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'primary_expression':([46,52,64,70,71,81,85,88,93,99,100,101,103,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,234,241,246,252,257,264,298,307,313,315,317,319,320,321,324,339,345,348,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'inclusive_or_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,277,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'exclusive_or_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,278,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'and_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,279,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'equality_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,280,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'relational_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,281,282,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'shift_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,283,284,285,286,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'additive_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,287,288,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'multiplicative_expression':([46,52,64,70,71,81,85,88,93,132,157,162,163,165,167,168,172,173,175,181,193,194,195,196,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,234,241,246,252,264,298,307,313,315,317,319,320,321,324,339,345,348,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,289,290,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'constant_expression':([52,81,234,241,246,298,307,],[128,164,303,308,310,327,333,]),'parameter_type_list':([53,233,260,298,],[134,301,301,328,]),'identifier_list':([53,],[136,]),'parameter_list':([53,233,260,298,],[137,137,137,137,]),'parameter_declaration':([53,228,233,260,298,],[139,296,139,139,139,]),'struct_declaration_list':([59,144,],[145,235,]),'struct_declaration':([59,144,145,235,],[146,146,237,237,]),'specifier_qualifier_list':([59,85,132,144,145,148,149,206,235,],[147,171,171,147,147,242,243,171,147,]),'enumerator_list':([60,153,],[150,247,]),'enumerator':([60,153,245,],[151,151,309,]),'initializer':([64,157,313,],[155,249,335,]),'type_name':([85,132,206,],[170,170,276,]),'assignment_operator':([96,],[181,]),'abstract_declarator':([140,171,233,260,],[230,258,300,300,]),'direct_abstract_declarator':([140,171,231,233,259,260,],[232,232,297,232,297,232,]),'struct_declarator_list':([147,],[238,]),'struct_declarator':([147,306,],[239,332,]),'initializer_list':([157,],[248,]),'argument_expression_list':([196,],[272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','parser.py',121),
  ('primary_expression -> CHAR_CONST','primary_expression',1,'p_primary_expression','parser.py',122),
  ('primary_expression -> INT_CONST','primary_expression',1,'p_primary_expression','parser.py',123),
  ('primary_expression -> FLOAT_CONST','primary_expression',1,'p_primary_expression','parser.py',124),
  ('primary_expression -> OCTAL_CONST','primary_expression',1,'p_primary_expression','parser.py',125),
  ('primary_expression -> HEX_CONST','primary_expression',1,'p_primary_expression','parser.py',126),
  ('primary_expression -> BIN_CONST','primary_expression',1,'p_primary_expression','parser.py',127),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',128),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',129),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',135),
  ('postfix_expression -> postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET','postfix_expression',4,'p_postfix_expression','parser.py',136),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','parser.py',137),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','parser.py',138),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression','parser.py',139),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression','parser.py',140),
  ('postfix_expression -> postfix_expression INCREMENT','postfix_expression',2,'p_postfix_expression','parser.py',141),
  ('postfix_expression -> postfix_expression DECREMENT','postfix_expression',2,'p_postfix_expression','parser.py',142),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',148),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',149),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',160),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression','parser.py',161),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression','parser.py',162),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',163),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',164),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','parser.py',165),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','parser.py',171),
  ('unary_operator -> MULTIPLY','unary_operator',1,'p_unary_operator','parser.py',172),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','parser.py',173),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','parser.py',174),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','parser.py',175),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','parser.py',176),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',182),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',183),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multipicative_expression','parser.py',189),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',190),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',191),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multipicative_expression','parser.py',192),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',198),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',199),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',200),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',206),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',207),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',208),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',214),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','parser.py',215),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','parser.py',216),
  ('relational_expression -> relational_expression LESSEQUAL shift_expression','relational_expression',3,'p_relational_expression','parser.py',217),
  ('relational_expression -> relational_expression GREATEREQUAL shift_expression','relational_expression',3,'p_relational_expression','parser.py',218),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expresssion','parser.py',224),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expresssion','parser.py',225),
  ('equality_expression -> equality_expression NOTEQUAL relational_expression','equality_expression',3,'p_equality_expresssion','parser.py',226),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',232),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression','parser.py',233),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',239),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',240),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',246),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',247),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',253),
  ('logical_and_expression -> logical_and_expression LAND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',254),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',260),
  ('logical_or_expression -> logical_or_expression LOR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',261),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',267),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',268),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',274),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',275),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',281),
  ('assignment_operator -> MULTIPLYEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',282),
  ('assignment_operator -> DIVIDEEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',283),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',284),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',285),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',286),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',287),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',288),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',289),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',290),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',291),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',297),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',298),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',304),
  ('declaration -> declaration_specifiers SEMICOLON','declaration',2,'p_declaration','parser.py',308),
  ('declaration -> declaration_specifiers init_declarator_list SEMICOLON','declaration',3,'p_declaration','parser.py',309),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',315),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',316),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',317),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',318),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',319),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',320),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',326),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',327),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',333),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','parser.py',334),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',340),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser.py',341),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser.py',342),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',343),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser.py',344),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',352),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',353),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',354),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',355),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',356),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',357),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',358),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',359),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',360),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser.py',361),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser.py',362),
  ('type_specifier -> TYPE_NAME','type_specifier',1,'p_type_specifier','parser.py',363),
  ('struct_or_union_specifier -> struct_or_union ID LCURLYBRACKET struct_declaration_list RCURLYBRACKET','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser.py',369),
  ('struct_or_union_specifier -> struct_or_union LCURLYBRACKET struct_declaration_list RCURLYBRACKET','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser.py',370),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser.py',371),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser.py',376),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser.py',377),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser.py',382),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser.py',383),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON','struct_declaration',3,'p_struct_declaration','parser.py',388),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',393),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',394),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',395),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',396),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser.py',402),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser.py',403),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser.py',408),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser.py',409),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser.py',410),
  ('enum_specifier -> ENUM LCURLYBRACKET enumerator_list RCURLYBRACKET','enum_specifier',4,'p_enum_specifier','parser.py',415),
  ('enum_specifier -> ENUM ID LCURLYBRACKET enumerator_list RCURLYBRACKET','enum_specifier',5,'p_enum_specifier','parser.py',416),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier','parser.py',417),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser.py',422),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','parser.py',423),
  ('enumerator -> ID','enumerator',1,'p_enumerator','parser.py',428),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','parser.py',429),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',434),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser.py',435),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',441),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',442),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator','parser.py',448),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',449),
  ('direct_declarator -> direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET','direct_declarator',4,'p_direct_declarator','parser.py',450),
  ('direct_declarator -> direct_declarator LSQUAREBRACKET RSQUAREBRACKET','direct_declarator',3,'p_direct_declarator','parser.py',451),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',452),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',453),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',454),
  ('pointer -> MULTIPLY','pointer',1,'p_pointer','parser.py',460),
  ('pointer -> MULTIPLY type_qualifier_list','pointer',2,'p_pointer','parser.py',461),
  ('pointer -> MULTIPLY pointer','pointer',2,'p_pointer','parser.py',462),
  ('pointer -> MULTIPLY type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',463),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',469),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',470),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',476),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser.py',477),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',483),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',484),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',490),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',491),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',492),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','parser.py',498),
  ('identifier_list -> identifier_list COMMA ID','identifier_list',3,'p_identifier_list','parser.py',499),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',505),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',506),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',512),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',513),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',514),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',520),
  ('direct_abstract_declarator -> LSQUAREBRACKET RSQUAREBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',521),
  ('direct_abstract_declarator -> LSQUAREBRACKET constant_expression RSQUAREBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',522),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',523),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN constant_expression RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',524),
  ('direct_abstract_declarator -> LPAREN RPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',525),
  ('direct_abstract_declarator -> LPAREN parameter_type_list RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',526),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',527),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',533),
  ('initializer -> LCURLYBRACKET initializer_list RCURLYBRACKET','initializer',3,'p_initializer','parser.py',534),
  ('initializer -> LCURLYBRACKET initializer_list COMMA RCURLYBRACKET','initializer',4,'p_initializer','parser.py',535),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',541),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser.py',542),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',548),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',549),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',550),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',551),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',552),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',553),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',559),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',560),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',561),
  ('compound_statement -> LCURLYBRACKET RCURLYBRACKET','compound_statement',2,'p_compound_statement','parser.py',567),
  ('compound_statement -> LCURLYBRACKET statement_list RCURLYBRACKET','compound_statement',3,'p_compound_statement','parser.py',568),
  ('compound_statement -> LCURLYBRACKET declaration_list RCURLYBRACKET','compound_statement',3,'p_compound_statement','parser.py',569),
  ('compound_statement -> LCURLYBRACKET declaration_list statement_list RCURLYBRACKET','compound_statement',4,'p_compound_statement','parser.py',570),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',576),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',577),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',583),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',584),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',590),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',591),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',597),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',598),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',599),
  ('iteration_statement -> WHILE LPAREN expression RPAREN','iteration_statement',4,'p_iteration_statement','parser.py',605),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parser.py',606),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement','parser.py',607),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',608),
  ('jump_statement -> GOTO ID SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',614),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',615),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',616),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',617),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',618),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',624),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',625),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',631),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',632),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser.py',638),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',639),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','parser.py',640),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','parser.py',641),
]
