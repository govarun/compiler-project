PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(STRUCT,'struct',1,0)
Action : Shift and goto state 36

State  : 36
Stack  : STRUCT . LexToken(ID,'f',1,7)
Action : Reduce rule [struct_or_union -> STRUCT] with ['struct'] and goto state 34
Result : <Node @ 0x7f283fe0a610> (<parser.Node object at 0x7f283fe0a610>)

State  : 34
Stack  : struct_or_union . LexToken(ID,'f',1,7)
Action : Shift and goto state 59

State  : 59
Stack  : struct_or_union ID . LexToken(LCURLYBRACKET,'{',1,8)
Action : Shift and goto state 61

State  : 61
Stack  : struct_or_union ID LCURLYBRACKET . LexToken(INT,'int',2,14)
Action : Reduce rule [openbrace -> LCURLYBRACKET] with ['{'] and goto state 153
Result : <str @ 0x7f28403be1b0> ('{')

State  : 153
Stack  : struct_or_union ID openbrace . LexToken(INT,'int',2,14)
Action : Shift and goto state 20

State  : 20
Stack  : struct_or_union ID openbrace INT . LexToken(ID,'x',2,18)
Action : Reduce rule [type_specifier -> INT] with ['int'] and goto state 157
Result : <Node @ 0x7f283fe0a670> (<parser.Node object at 0x7f283fe0a670>)

State  : 157
Stack  : struct_or_union ID openbrace type_specifier . LexToken(ID,'x',2,18)
Action : Reduce rule [specifier_qualifier_list -> type_specifier] with [<Node @ 0x7f283fe0a670>] and goto state 156
Result : <Node @ 0x7f283fe0a730> (<parser.Node object at 0x7f283fe0a730>)

State  : 156
Stack  : struct_or_union ID openbrace specifier_qualifier_list . LexToken(ID,'x',2,18)
Action : Shift and goto state 32

State  : 32
Stack  : struct_or_union ID openbrace specifier_qualifier_list ID . LexToken(SEMICOLON,';',2,20)
Action : Reduce rule [direct_declarator -> ID] with ['x'] and goto state 11
Result : <Node @ 0x7f283fe0a520> (<parser.Node object at 0x7f283fe0a520>)

State  : 11
Stack  : struct_or_union ID openbrace specifier_qualifier_list direct_declarator . LexToken(SEMICOLON,';',2,20)
Action : Reduce rule [declarator -> direct_declarator] with [<Node @ 0x7f283fe0a520>] and goto state 252
Result : <Node @ 0x7f283fe0a520> (<parser.Node object at 0x7f283fe0a520>)

State  : 252
Stack  : struct_or_union ID openbrace specifier_qualifier_list declarator . LexToken(SEMICOLON,';',2,20)
Action : Reduce rule [struct_declarator -> declarator] with [<Node @ 0x7f283fe0a520>] and goto state 251
Result : <Node @ 0x7f283fe0a520> (<parser.Node object at 0x7f283fe0a520>)

State  : 251
Stack  : struct_or_union ID openbrace specifier_qualifier_list struct_declarator . LexToken(SEMICOLON,';',2,20)
Action : Reduce rule [struct_declarator_list -> struct_declarator] with [<Node @ 0x7f283fe0a520>] and goto state 250
Result : <Node @ 0x7f283fe0a790> (<parser.Node object at 0x7f283fe0a790>)

State  : 250
Stack  : struct_or_union ID openbrace specifier_qualifier_list struct_declarator_list . LexToken(SEMICOLON,';',2,20)
Action : Shift and goto state 320

State  : 320
Stack  : struct_or_union ID openbrace specifier_qualifier_list struct_declarator_list SEMICOLON . LexToken(RCURLYBRACKET,'}',3,22)
Action : Reduce rule [struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON] with [<Node @ 0x7f283fe0a730>,<Node @ 0x7f283fe0a790>,';'] and goto state 155
Result : <Node @ 0x7f283fe0a580> (<parser.Node object at 0x7f283fe0a580>)

State  : 155
Stack  : struct_or_union ID openbrace struct_declaration . LexToken(RCURLYBRACKET,'}',3,22)
Action : Reduce rule [struct_declaration_list -> struct_declaration] with [<Node @ 0x7f283fe0a580>] and goto state 247
Result : <Node @ 0x7f283ffab8b0> (<parser.Node object at 0x7f283ffab8b0>)

State  : 247
Stack  : struct_or_union ID openbrace struct_declaration_list . LexToken(RCURLYBRACKET,'}',3,22)
Action : Shift and goto state 74

State  : 74
Stack  : struct_or_union ID openbrace struct_declaration_list RCURLYBRACKET . LexToken(INT,'int',4,24)
Action : Reduce rule [closebrace -> RCURLYBRACKET] with ['}'] and goto state 319
Result : <str @ 0x7f28403be1f0> ('}')

State  : 319
Stack  : struct_or_union ID openbrace struct_declaration_list closebrace . LexToken(INT,'int',4,24)
Action : Reduce rule [struct_or_union_specifier -> struct_or_union ID openbrace struct_declaration_list closebrace] with [<Node @ 0x7f283fe0a610>,'f','{',<Node @ 0x7f283ffab8b0>,'}'] and goto state 27
Result : <Node @ 0x7f283ffab730> (<parser.Node object at 0x7f283ffab730>)

State  : 27
Stack  : struct_or_union_specifier . LexToken(INT,'int',4,24)
Action : Reduce rule [type_specifier -> struct_or_union_specifier] with [<Node @ 0x7f283ffab730>] and goto state 8
Result : <Node @ 0x7f283ffab730> (<parser.Node object at 0x7f283ffab730>)

State  : 8
Stack  : type_specifier . LexToken(INT,'int',4,24)
Action : Shift and goto state 20

State  : 20
Stack  : type_specifier INT . LexToken(ID,'main',4,28)
Action : Reduce rule [type_specifier -> INT] with ['int'] and goto state 8
Result : <Node @ 0x7f283ffab790> (<parser.Node object at 0x7f283ffab790>)

State  : 8
Stack  : type_specifier type_specifier . LexToken(ID,'main',4,28)
Action : Reduce rule [declaration_specifiers -> type_specifier] with [<Node @ 0x7f283ffab790>] and goto state 49
Result : <Node @ 0x7f283ffab790> (<parser.Node object at 0x7f283ffab790>)

State  : 49
Stack  : type_specifier declaration_specifiers . LexToken(ID,'main',4,28)
Action : Reduce rule [declaration_specifiers -> type_specifier declaration_specifiers] with [<Node @ 0x7f283ffab730>,<Node @ 0x7f283ffab790>] and goto state 5
Result : <Node @ 0x7f283ffab700> (<parser.Node object at 0x7f283ffab700>)

State  : 5
Stack  : declaration_specifiers . LexToken(ID,'main',4,28)
Action : Shift and goto state 32

State  : 32
Stack  : declaration_specifiers ID . LexToken(LPAREN,'(',4,32)
Action : Reduce rule [direct_declarator -> ID] with ['main'] and goto state 11
Result : <Node @ 0x7f283ffab6a0> (<parser.Node object at 0x7f283ffab6a0>)

State  : 11
Stack  : declaration_specifiers direct_declarator . LexToken(LPAREN,'(',4,32)
Action : Shift and goto state 54

State  : 54
Stack  : declaration_specifiers direct_declarator LPAREN . LexToken(RPAREN,')',4,33)
Action : Reduce rule [lopenparen -> LPAREN] with ['('] and goto state 52
Result : <str @ 0x7f28402effb0> ('(')

State  : 52
Stack  : declaration_specifiers direct_declarator lopenparen . LexToken(RPAREN,')',4,33)
Action : Shift and goto state 138

State  : 138
Stack  : declaration_specifiers direct_declarator lopenparen RPAREN . LexToken(LCURLYBRACKET,'{',5,35)
Action : Reduce rule [direct_declarator -> direct_declarator lopenparen RPAREN] with [<Node @ 0x7f283ffab6a0>,'(',')'] and goto state 11
Result : <Node @ 0x7f283ffab6a0> (<parser.Node object at 0x7f283ffab6a0>)

State  : 11
Stack  : declaration_specifiers direct_declarator . LexToken(LCURLYBRACKET,'{',5,35)
Action : Reduce rule [declarator -> direct_declarator] with [<Node @ 0x7f283ffab6a0>] and goto state 39
Result : <Node @ 0x7f283ffab6a0> (<parser.Node object at 0x7f283ffab6a0>)

State  : 39
Stack  : declaration_specifiers declarator . LexToken(LCURLYBRACKET,'{',5,35)
Action : Shift and goto state 46

State  : 46
Stack  : declaration_specifiers declarator LCURLYBRACKET . LexToken(STRUCT,'struct',6,41)
Action : Shift and goto state 36

State  : 36
Stack  : declaration_specifiers declarator LCURLYBRACKET STRUCT . LexToken(ID,'f',6,48)
Action : Reduce rule [struct_or_union -> STRUCT] with ['struct'] and goto state 34
Result : <Node @ 0x7f283ffab8b0> (<parser.Node object at 0x7f283ffab8b0>)

State  : 34
Stack  : declaration_specifiers declarator LCURLYBRACKET struct_or_union . LexToken(ID,'f',6,48)
Action : Shift and goto state 59

State  : 59
Stack  : declaration_specifiers declarator LCURLYBRACKET struct_or_union ID . LexToken(ID,'p1',6,50)
Action : Reduce rule [struct_or_union_specifier -> struct_or_union ID] with [<Node @ 0x7f283ffab8b0>,'f'] and goto state 27
Result : <Node @ 0x7f283ffab790> (<parser.Node object at 0x7f283ffab790>)

State  : 27
Stack  : declaration_specifiers declarator LCURLYBRACKET struct_or_union_specifier . LexToken(ID,'p1',6,50)
Action : Reduce rule [type_specifier -> struct_or_union_specifier] with [<Node @ 0x7f283ffab790>] and goto state 8
Result : <Node @ 0x7f283ffab790> (<parser.Node object at 0x7f283ffab790>)

State  : 8
Stack  : declaration_specifiers declarator LCURLYBRACKET type_specifier . LexToken(ID,'p1',6,50)
Action : Reduce rule [declaration_specifiers -> type_specifier] with [<Node @ 0x7f283ffab790>] and goto state 47
Result : <Node @ 0x7f283ffab790> (<parser.Node object at 0x7f283ffab790>)

State  : 47
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_specifiers . LexToken(ID,'p1',6,50)
Action : Shift and goto state 32

State  : 32
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_specifiers ID . LexToken(SEMICOLON,';',6,53)
Action : Reduce rule [direct_declarator -> ID] with ['p1'] and goto state 11
Result : <Node @ 0x7f283ffab580> (<parser.Node object at 0x7f283ffab580>)

State  : 11
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_specifiers direct_declarator . LexToken(SEMICOLON,';',6,53)
Action : Reduce rule [declarator -> direct_declarator] with [<Node @ 0x7f283ffab580>] and goto state 136
Result : <Node @ 0x7f283ffab580> (<parser.Node object at 0x7f283ffab580>)

State  : 136
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_specifiers declarator . LexToken(SEMICOLON,';',6,53)
Action : Reduce rule [init_declarator -> declarator] with [<Node @ 0x7f283ffab580>] and goto state 42
Result : <Node @ 0x7f283ffab580> (<parser.Node object at 0x7f283ffab580>)

State  : 42
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_specifiers init_declarator . LexToken(SEMICOLON,';',6,53)
Action : Reduce rule [init_declarator_list -> init_declarator] with [<Node @ 0x7f283ffab580>] and goto state 41
Result : <Node @ 0x7f283ffab340> (<parser.Node object at 0x7f283ffab340>)

State  : 41
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_specifiers init_declarator_list . LexToken(SEMICOLON,';',6,53)
Action : Shift and goto state 67

State  : 67
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_specifiers init_declarator_list SEMICOLON . LexToken(ID,'p1',7,59)
Action : Reduce rule [declaration -> declaration_specifiers init_declarator_list SEMICOLON] with [<Node @ 0x7f283ffab790>,<Node @ 0x7f283ffab340>,';'] and goto state 45
Result : <Node @ 0x7f283ffab5b0> (<parser.Node object at 0x7f283ffab5b0>)

State  : 45
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration . LexToken(ID,'p1',7,59)
Action : Reduce rule [declaration_list -> declaration] with [<Node @ 0x7f283ffab5b0>] and goto state 73
Result : <Node @ 0x7f283ffab5b0> (<parser.Node object at 0x7f283ffab5b0>)

State  : 73
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list . LexToken(ID,'p1',7,59)
Action : Shift and goto state 83

State  : 83
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list ID . LexToken(PERIOD,'.',7,61)
Action : Reduce rule [primary_expression -> ID] with ['p1'] and goto state 114
Result : <Node @ 0x7f283ffab760> (<parser.Node object at 0x7f283ffab760>)

State  : 114
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list primary_expression . LexToken(PERIOD,'.',7,61)
Action : Reduce rule [postfix_expression -> primary_expression] with [<Node @ 0x7f283ffab760>] and goto state 107
Result : <Node @ 0x7f283ffab760> (<parser.Node object at 0x7f283ffab760>)

State  : 107
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list postfix_expression . LexToken(PERIOD,'.',7,61)
Action : Shift and goto state 209

State  : 209
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list postfix_expression PERIOD . LexToken(ID,'x',7,62)
Action : Shift and goto state 289

State  : 289
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list postfix_expression PERIOD ID . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [postfix_expression -> postfix_expression PERIOD ID] with [<Node @ 0x7f283ffab760>,'.','x'] and goto state 107
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 107
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list postfix_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [unary_expression -> postfix_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 105
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 105
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list unary_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [cast_expression -> unary_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 111
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 111
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list cast_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [multiplicative_expression -> cast_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 135
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 135
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list multiplicative_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [additive_expression -> multiplicative_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 134
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 134
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list additive_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [shift_expression -> additive_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 133
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 133
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list shift_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [relational_expression -> shift_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 132
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 132
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list relational_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [equality_expression -> relational_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 131
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 131
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list equality_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [and_expression -> equality_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 130
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 130
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list and_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [exclusive_or_expression -> and_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 129
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 129
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list exclusive_or_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [inclusive_or_expression -> exclusive_or_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 121
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 121
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list inclusive_or_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [logical_and_expression -> inclusive_or_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 113
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 113
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list logical_and_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [logical_or_expression -> logical_and_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 106
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 106
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list logical_or_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [conditional_expression -> logical_or_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 104
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 104
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list conditional_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [assignment_expression -> conditional_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 99
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 99
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list assignment_expression . LexToken(SEMICOLON,';',7,64)
Action : Reduce rule [expression -> assignment_expression] with [<Node @ 0x7f283ffab7f0>] and goto state 87
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 87
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list expression . LexToken(SEMICOLON,';',7,64)
Action : Shift and goto state 178

State  : 178
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list expression SEMICOLON . LexToken(RCURLYBRACKET,'}',8,66)
Action : Reduce rule [expression_statement -> expression SEMICOLON] with [<Node @ 0x7f283ffab7f0>,';'] and goto state 78
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 78
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list expression_statement . LexToken(RCURLYBRACKET,'}',8,66)
Action : Reduce rule [statement -> expression_statement] with [<Node @ 0x7f283ffab7f0>] and goto state 75
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 75
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list statement . LexToken(RCURLYBRACKET,'}',8,66)
Action : Reduce rule [statement_list -> statement] with [<Node @ 0x7f283ffab7f0>] and goto state 171
Result : <Node @ 0x7f283ffab7f0> (<parser.Node object at 0x7f283ffab7f0>)

State  : 171
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list statement_list . LexToken(RCURLYBRACKET,'}',8,66)
Action : Shift and goto state 74

State  : 74
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list statement_list RCURLYBRACKET . $end
Action : Reduce rule [closebrace -> RCURLYBRACKET] with ['}'] and goto state 262
Result : <str @ 0x7f28403be1f0> ('}')

State  : 262
Stack  : declaration_specifiers declarator LCURLYBRACKET declaration_list statement_list closebrace . $end
Action : Reduce rule [function_compound_statement -> LCURLYBRACKET declaration_list statement_list closebrace] with ['{',<Node @ 0x7f283ffab5b0>,<Node @ 0x7f283ffab7f0>,'}'] and goto state 65
Result : <NoneType @ 0x90aa10> (None)

State  : 65
Stack  : declaration_specifiers declarator function_compound_statement . $end
Action : Reduce rule [function_definition -> declaration_specifiers declarator function_compound_statement] with [<Node @ 0x7f283ffab700>,<Node @ 0x7f283ffab6a0>,None] and goto state 3
Result : <Node @ 0x7f283ffab610> (<parser.Node object at 0x7f283ffab610>)

State  : 3
Stack  : function_definition . $end
Action : Reduce rule [external_declaration -> function_definition] with [<Node @ 0x7f283ffab610>] and goto state 2
Result : <Node @ 0x7f283ffab610> (<parser.Node object at 0x7f283ffab610>)

State  : 2
Stack  : external_declaration . $end
Action : Reduce rule [translation_unit -> external_declaration] with [<Node @ 0x7f283ffab610>] and goto state 1
Result : <NoneType @ 0x90aa10> (None)

State  : 1
Stack  : translation_unit . $end
Done   : Returning <NoneType @ 0x90aa10> (None)
PLY: PARSE DEBUG END
